{"version":3,"sources":["../lib/core/dom.ts","../lib/core/math.ts","11-rust-wasm/pkg/wasm-loader.js","11-rust-wasm/pkg/11_rust_wasm.js","11-rust-wasm/src/lib.rs","11-rust-wasm/src/entry.ts"],"names":["isFetchable","value","URL","Request","isWasmInstance","WebAssembly","Instance","canInstantiateStreaming","instantiateStreaming","streamErrorMessage","join","instantiate","request","imports","then","response","arrayBuffer","bytes","instantiateRequest","catch","e","console","warn","instantiateModule","module","result","instance","load","wasm","fetch","__wbindgen_wasm_module","exports","heap","Array","fill","undefined","push","stack_pointer","addBorrowedObject","obj","Error","draw","ctx","w","h","getObject","idx","heap_next","length","dropObject","takeObject","ret","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","cachegetUint8Memory","getUint8Memory","buffer","memory","Uint8Array","getStringFromWasm","ptr","len","decode","subarray","addHeapObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm","__wbindgen_malloc","mem","offset","code","charCodeAt","slice","__wbindgen_realloc","cachegetInt32Memory","getInt32Memory","Int32Array","handleError","__wbindgen_exn_store","debugString","val","type","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","message","stack","__wbindgen_object_drop_ref","arg0","__wbindgen_string_new","arg1","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","ret0","ret1","__wbg_error_4bb6c2a97407129a","v0","__wbindgen_free","error","__widl_f_fill_CanvasRenderingContext2D","__widl_f_set_fill_style_CanvasRenderingContext2D","fillStyle","__widl_f_arc_CanvasRenderingContext2D","arg2","arg3","arg4","arg5","arc","__widl_f_fill_rect_CanvasRenderingContext2D","fillRect","__widl_f_log_1_","log","__wbindgen_debug_string","__wbindgen_throw","init","wasmUrl","wasmExports","require"],"mappings":"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","file":"entry.7225ab23.js","sourceRoot":"../src/lab","sourcesContent":["export const {\n  requestAnimationFrame: rAF,\n  cancelAnimationFrame: cAF,\n  devicePixelRatio: dpr,\n} = window;\n\nexport function el(selectors: string): Element | null {\n  return document.querySelector(selectors);\n}\n\ntype Listener<T extends Event> = (event: T) => void;\n\nexport function on<T extends Event>(type: string, listener: Listener<T>): void {\n  return window.addEventListener(type, listener as EventListener);\n}\n\nexport function off<T extends Event>(\n  type: string,\n  listener: Listener<T>,\n): void {\n  return window.removeEventListener(type, listener as EventListener);\n}\n","export const {\n  abs,\n  acos,\n  atan2,\n  ceil,\n  cos,\n  floor,\n  hypot,\n  max,\n  min,\n  PI: π,\n  pow,\n  round,\n  sin,\n  sqrt,\n} = Math;\nexport const ππ = π * 2;\nexport const { isFinite } = Number;\n\n/**\n * ## lerp\n * short for \"linear interpolate\" this function returns a number that is\n * interpolated between `a` and `b` by the ratio provided in `i` (e.g. if `i` is\n * 0 `a` is returned, if `i` is 1 `b` is returned)\n *\n * @export\n * @param {number} v0 the lower bound of the interpolation\n * @param {number} v1 the upper bound of the interpolation\n * @param {number} t the ratio by which to interpolate between `a` and `b`\n * @returns {number} a number that is interpolated between `a` and `b` by the\n * ratio provided in `i`\n */\nexport function lerp(v0: number, v1: number, t: number): number {\n  /**\n   * prefer precise method\n   * @see: https://github.com/mattdesl/lerp/blob/master/index.js\n   * @see: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\n   */\n  return (1 - t) * v0 + t * v1;\n}\n\n/**\n * ## saw\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"sawtooth\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function saw(radians: number): number {\n  return (radians % ππ) / π - 1;\n}\n\n/**\n * ## tri\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"triangle wave\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function tri(radians: number): number {\n  return 1 - 2 * abs(saw(radians));\n}\n\n/**\n * ## toDegrees\n * takes an angle in radians and returns that angle in degrees\n *\n * @param {number} radians an angle, in radians\n * @return {number} that same angle, in degrees\n */\nexport function toDegrees(radians: number): number {\n  return (radians * 180) / π;\n}\n\n/**\n * ## toRadians\n * takes an angle in degrees and returns that angle in radians\n *\n * @param {number} degrees an angle, in degrees\n * @return {number} that same angle, in radians\n */\nexport function toRadians(degrees: number): number {\n  return (degrees * π) / 180;\n}\n","function isFetchable(value) {\n  return (\n    value instanceof URL ||\n    typeof value === 'string' ||\n    value instanceof Request\n  );\n}\n\nfunction isWasmInstance(value) {\n  return value instanceof WebAssembly.Instance;\n}\n\nconst canInstantiateStreaming =\n  typeof WebAssembly.instantiateStreaming === 'function';\n\nconst streamErrorMessage = [\n  '`WebAssembly.instantiateStreaming` failed. Assuming this is because your',\n  'server does not serve wasm with `application/wasm` MIME type. Falling back',\n  'to `WebAssembly.instantiate` which is slower. Original error:\\n',\n].join(' ');\n\nfunction instantiate(request, imports) {\n  return request\n    .then(response => response.arrayBuffer())\n    .then(bytes => WebAssembly.instantiate(bytes, imports));\n}\n\nfunction instantiateRequest(request, imports) {\n  return canInstantiateStreaming\n    ? WebAssembly.instantiateStreaming(request, imports).catch(e => {\n        console.warn(streamErrorMessage, e);\n        return instantiate(request, imports);\n      })\n    : instantiate(request, imports);\n}\n\nasync function instantiateModule(module, imports) {\n  const result = await WebAssembly.instantiate(module, imports);\n  return isWasmInstance(result) ? { instance: result, module } : result;\n}\n\nexport async function load(wasm, imports) {\n  const { instance, module } = await (isFetchable(wasm)\n    ? instantiateRequest(fetch(wasm), imports)\n    : instantiateModule(wasm, imports));\n\n  load.__wbindgen_wasm_module = module;\n  return instance.exports;\n}\n","import { load } from './wasm-loader.js';\nlet wasm;\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* @param {any} ctx\n* @param {number} w\n* @param {number} h\n*/\nexport function draw(ctx, w, h) {\n    try {\n        wasm.draw(addBorrowedObject(ctx), w, h);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm(arg) {\n\n    let len = arg.length;\n    let ptr = wasm.__wbindgen_malloc(len);\n\n    const mem = getUint8Memory();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = wasm.__wbindgen_realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory = null;\nfunction getInt32Memory() {\n    if (cachegetInt32Memory === null || cachegetInt32Memory.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory;\n}\n\nfunction handleError(e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    const ret = getStringFromWasm(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ret0 = passStringToWasm(ret);\n    const ret1 = WASM_VECTOR_LEN;\n    getInt32Memory()[arg0 / 4 + 0] = ret0;\n    getInt32Memory()[arg0 / 4 + 1] = ret1;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    const v0 = getStringFromWasm(arg0, arg1).slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n    console.error(v0);\n};\n\nexport const __widl_f_fill_CanvasRenderingContext2D = function(arg0) {\n    getObject(arg0).fill();\n};\n\nexport const __widl_f_set_fill_style_CanvasRenderingContext2D = function(arg0, arg1) {\n    getObject(arg0).fillStyle = getObject(arg1);\n};\n\nexport const __widl_f_arc_CanvasRenderingContext2D = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n    try {\n        getObject(arg0).arc(arg1, arg2, arg3, arg4, arg5);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_fill_rect_CanvasRenderingContext2D = function(arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).fillRect(arg1, arg2, arg3, arg4);\n};\n\nexport const __widl_f_log_1_ = function(arg0) {\n    console.log(getObject(arg0));\n};\n\nexport const __wbindgen_debug_string = function(arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ret0 = passStringToWasm(ret);\n    const ret1 = WASM_VECTOR_LEN;\n    getInt32Memory()[arg0 / 4 + 0] = ret0;\n    getInt32Memory()[arg0 / 4 + 1] = ret1;\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm(arg0, arg1));\n};\n\n\nexport default function init(wasmUrl) {\n  return load(wasmUrl, {\n    ['./11_rust_wasm.js']: {\n      __wbindgen_object_drop_ref,\n      __wbindgen_string_new,\n      __wbg_new_59cb74e423758ede,\n      __wbg_stack_558ba5917b466edd,\n      __wbg_error_4bb6c2a97407129a,\n      __widl_f_fill_CanvasRenderingContext2D,\n      __widl_f_set_fill_style_CanvasRenderingContext2D,\n      __widl_f_arc_CanvasRenderingContext2D,\n      __widl_f_fill_rect_CanvasRenderingContext2D,\n      __widl_f_log_1_,\n      __wbindgen_debug_string,\n      __wbindgen_throw\n    }\n  }).then(wasmExports => {\n    wasm = wasmExports;\n    return {\n      draw\n    }\n  });\n}\n","import init from '../pkg/11_rust_wasm.js';\nmodule.exports = init(require('../pkg/11_rust_wasm_bg.wasm'));\n","import { el } from '../../../lib/core/dom';\nimport { max } from '../../../lib/core/math';\n\nimport { draw } from './lib.rs';\nimport './style.css';\n\nconst { devicePixelRatio: dpr } = window;\n\nconst c = el('canvas') as HTMLCanvasElement;\nconst w = 720;\nconst h = 480;\n\nc.width = w * dpr;\nc.height = h * dpr;\nc.style.transform = `scale(${max(w / c.width, h / c.height)})`;\n\nconst ctx = c.getContext('2d') as CanvasRenderingContext2D;\ndraw(ctx, c.width, c.height);\n"]}