{"version":3,"sources":["../lib/core/dom.ts","../lib/core/math.ts","11-rust-wasm/pkg/11_rust_wasm.js","11-rust-wasm/src/lib.rs","11-rust-wasm/src/entry.ts"],"names":["init","__exports","wasm","heap","Array","fill","undefined","push","stack_pointer","addBorrowedObject","obj","Error","draw","ctx","w","h","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getUint8Memory","buffer","memory","Uint8Array","getStringFromWasm","ptr","len","decode","subarray","__wbg_error_4bb6c2a97407129a","arg0","arg1","varg0","slice","__wbindgen_free","console","error","heap_next","length","addHeapObject","idx","__wbg_new_59cb74e423758ede","getObject","passStringToWasm","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeInto","arg","size","__wbindgen_malloc","offset","mem","code","charCodeAt","__wbindgen_realloc","view","written","buf","encode","set","cachegetUint32Memory","getUint32Memory","Uint32Array","__wbg_stack_558ba5917b466edd","ret","retptr","stack","retlen","__widl_f_fill_CanvasRenderingContext2D","__widl_f_set_fill_style_CanvasRenderingContext2D","fillStyle","handleError","exnptr","e","__widl_f_arc_CanvasRenderingContext2D","arg2","arg3","arg4","arg5","arc","__widl_f_fill_rect_CanvasRenderingContext2D","fillRect","__widl_f_log_1_","log","__wbindgen_string_new","p","l","__wbindgen_debug_string","i","len_ptr","debug_str","val","type","description","name","isArray","debug","builtInMatches","exec","toString","call","className","JSON","stringify","_","message","Object","prototype","__wbindgen_throw","dropObject","__wbindgen_object_drop_ref","module","result","imports","URL","Request","response","fetch","WebAssembly","instantiateStreaming","catch","warn","then","r","arrayBuffer","bytes","instantiate","Instance","instance","exports","__wbindgen_wasm_module","require"],"mappings":"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","file":"entry.da847c1e.js","sourceRoot":"../src/lab","sourcesContent":["export const {\n  requestAnimationFrame: rAF,\n  cancelAnimationFrame: cAF,\n  devicePixelRatio: dpr,\n} = window;\n\nexport function el(selectors: string): Element | null {\n  return document.querySelector(selectors);\n}\n\ntype Listener<T extends Event> = (event: T) => void;\n\nexport function on<T extends Event>(type: string, listener: Listener<T>): void {\n  return window.addEventListener(type, listener as EventListener);\n}\n\nexport function off<T extends Event>(\n  type: string,\n  listener: Listener<T>,\n): void {\n  return window.removeEventListener(type, listener as EventListener);\n}\n","export const {\n  abs,\n  acos,\n  atan2,\n  ceil,\n  cos,\n  floor,\n  hypot,\n  max,\n  min,\n  PI: π,\n  pow,\n  round,\n  sin,\n  sqrt,\n} = Math;\nexport const ππ = π * 2;\nexport const { isFinite } = Number;\n\n/**\n * ## lerp\n * short for \"linear interpolate\" this function returns a number that is\n * interpolated between `a` and `b` by the ratio provided in `i` (e.g. if `i` is\n * 0 `a` is returned, if `i` is 1 `b` is returned)\n *\n * @export\n * @param {number} v0 the lower bound of the interpolation\n * @param {number} v1 the upper bound of the interpolation\n * @param {number} t the ratio by which to interpolate between `a` and `b`\n * @returns {number} a number that is interpolated between `a` and `b` by the\n * ratio provided in `i`\n */\nexport function lerp(v0: number, v1: number, t: number): number {\n  /**\n   * prefer precise method\n   * @see: https://github.com/mattdesl/lerp/blob/master/index.js\n   * @see: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\n   */\n  return (1 - t) * v0 + t * v1;\n}\n\n/**\n * ## saw\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"sawtooth\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function saw(radians: number): number {\n  return (radians % ππ) / π - 1;\n}\n\n/**\n * ## tri\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"triangle wave\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function tri(radians: number): number {\n  return 1 - 2 * abs(saw(radians));\n}\n\n/**\n * ## toDegrees\n * takes an angle in radians and returns that angle in degrees\n *\n * @param {number} radians an angle, in radians\n * @return {number} that same angle, in degrees\n */\nexport function toDegrees(radians: number): number {\n  return (radians * 180) / π;\n}\n\n/**\n * ## toRadians\n * takes an angle in degrees and returns that angle in radians\n *\n * @param {number} degrees an angle, in degrees\n * @return {number} that same angle, in radians\n */\nexport function toRadians(degrees: number): number {\n  return (degrees * π) / 180;\n}\n","\nconst __exports = {};\nlet wasm;\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* @param {any} ctx\n* @param {number} w\n* @param {number} h\n* @returns {void}\n*/\nexport function draw(ctx, w, h) {\n    try {\n        return wasm.draw(addBorrowedObject(ctx), w, h);\n\n    } finally {\n        heap[stack_pointer++] = undefined;\n\n    }\n\n}\n__exports.draw = draw\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction __wbg_error_4bb6c2a97407129a(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n\n    varg0 = varg0.slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n\n    console.error(varg0);\n}\n__exports.__wbg_error_4bb6c2a97407129a = __wbg_error_4bb6c2a97407129a\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction __wbg_new_59cb74e423758ede() {\n    return addHeapObject(new Error());\n}\n__exports.__wbg_new_59cb74e423758ede = __wbg_new_59cb74e423758ede\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            arg = arg.slice(offset);\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + arg.length * 3);\n            const view = getUint8Memory().subarray(ptr + offset, ptr + size);\n            const ret = cachedTextEncoder.encodeInto(arg, view);\n\n            offset += ret.written;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            const buf = cachedTextEncoder.encode(arg.slice(offset));\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + buf.length);\n            getUint8Memory().set(buf, ptr + offset);\n            offset += buf.length;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction __wbg_stack_558ba5917b466edd(ret, arg0) {\n\n    const retptr = passStringToWasm(getObject(arg0).stack);\n    const retlen = WASM_VECTOR_LEN;\n    const mem = getUint32Memory();\n    mem[ret / 4] = retptr;\n    mem[ret / 4 + 1] = retlen;\n\n}\n__exports.__wbg_stack_558ba5917b466edd = __wbg_stack_558ba5917b466edd\n\nfunction __widl_f_fill_CanvasRenderingContext2D(arg0) {\n    getObject(arg0).fill();\n}\n__exports.__widl_f_fill_CanvasRenderingContext2D = __widl_f_fill_CanvasRenderingContext2D\n\nfunction __widl_f_set_fill_style_CanvasRenderingContext2D(arg0, arg1) {\n    getObject(arg0).fillStyle = getObject(arg1);\n}\n__exports.__widl_f_set_fill_style_CanvasRenderingContext2D = __widl_f_set_fill_style_CanvasRenderingContext2D\n\nfunction handleError(exnptr, e) {\n    const view = getUint32Memory();\n    view[exnptr / 4] = 1;\n    view[exnptr / 4 + 1] = addHeapObject(e);\n}\n\nfunction __widl_f_arc_CanvasRenderingContext2D(arg0, arg1, arg2, arg3, arg4, arg5, exnptr) {\n    try {\n        getObject(arg0).arc(arg1, arg2, arg3, arg4, arg5);\n    } catch (e) {\n        handleError(exnptr, e);\n    }\n}\n__exports.__widl_f_arc_CanvasRenderingContext2D = __widl_f_arc_CanvasRenderingContext2D\n\nfunction __widl_f_fill_rect_CanvasRenderingContext2D(arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).fillRect(arg1, arg2, arg3, arg4);\n}\n__exports.__widl_f_fill_rect_CanvasRenderingContext2D = __widl_f_fill_rect_CanvasRenderingContext2D\n\nfunction __widl_f_log_1_(arg0) {\n    console.log(getObject(arg0));\n}\n__exports.__widl_f_log_1_ = __widl_f_log_1_\n\nfunction __wbindgen_string_new(p, l) { return addHeapObject(getStringFromWasm(p, l)); }\n__exports.__wbindgen_string_new = __wbindgen_string_new\n\nfunction __wbindgen_debug_string(i, len_ptr) {\n    const debug_str =\n    val => {\n        // primitive types\n        const type = typeof val;\n        if (type == 'number' || type == 'boolean' || val == null) {\n            return  `${val}`;\n        }\n        if (type == 'string') {\n            return `\"${val}\"`;\n        }\n        if (type == 'symbol') {\n            const description = val.description;\n            if (description == null) {\n                return 'Symbol';\n            } else {\n                return `Symbol(${description})`;\n            }\n        }\n        if (type == 'function') {\n            const name = val.name;\n            if (typeof name == 'string' && name.length > 0) {\n                return `Function(${name})`;\n            } else {\n                return 'Function';\n            }\n        }\n        // objects\n        if (Array.isArray(val)) {\n            const length = val.length;\n            let debug = '[';\n            if (length > 0) {\n                debug += debug_str(val[0]);\n            }\n            for(let i = 1; i < length; i++) {\n                debug += ', ' + debug_str(val[i]);\n            }\n            debug += ']';\n            return debug;\n        }\n        // Test for built-in\n        const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n        let className;\n        if (builtInMatches.length > 1) {\n            className = builtInMatches[1];\n        } else {\n            // Failed to match the standard '[object ClassName]'\n            return toString.call(val);\n        }\n        if (className == 'Object') {\n            // we're a user defined class or Object\n            // JSON.stringify avoids problems with cycles, and is generally much\n            // easier than looping through ownProperties of `val`.\n            try {\n                return 'Object(' + JSON.stringify(val) + ')';\n            } catch (_) {\n                return 'Object';\n            }\n        }\n        // errors\n        if (val instanceof Error) {\n        return `${val.name}: ${val.message}\n        ${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n;\nconst toString = Object.prototype.toString;\nconst val = getObject(i);\nconst debug = debug_str(val);\nconst ptr = passStringToWasm(debug);\ngetUint32Memory()[len_ptr / 4] = WASM_VECTOR_LEN;\nreturn ptr;\n}\n__exports.__wbindgen_debug_string = __wbindgen_debug_string\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n__exports.__wbindgen_throw = __wbindgen_throw\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction __wbindgen_object_drop_ref(i) { dropObject(i); }\n__exports.__wbindgen_object_drop_ref = __wbindgen_object_drop_ref\n\nfunction init(module) {\n    let result;\n    const imports = { './11_rust_wasm': __exports };\n\n    if (module instanceof URL || typeof module === 'string' || module instanceof Request) {\n\n        const response = fetch(module);\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            result = WebAssembly.instantiateStreaming(response, imports)\n            .catch(e => {\n                console.warn(\"`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                return response\n                .then(r => r.arrayBuffer())\n                .then(bytes => WebAssembly.instantiate(bytes, imports));\n            });\n        } else {\n            result = response\n            .then(r => r.arrayBuffer())\n            .then(bytes => WebAssembly.instantiate(bytes, imports));\n        }\n    } else {\n\n        result = WebAssembly.instantiate(module, imports)\n        .then(result => {\n            if (result instanceof WebAssembly.Instance) {\n                return { instance: result, module };\n            } else {\n                return result;\n            }\n        });\n    }\n    return result.then(({instance, module}) => {\n        wasm = instance.exports;\n        init.__wbindgen_wasm_module = module;\n\n        return { draw };\n    });\n}\n\nexport default init;\n\n","import init from '../pkg/11_rust_wasm.js';\nmodule.exports = init(require('../pkg/11_rust_wasm_bg.wasm'));\n","import { el } from '../../../lib/core/dom';\nimport { max } from '../../../lib/core/math';\n\nimport { draw } from './lib.rs';\nimport './style.css';\n\nconst { devicePixelRatio: dpr } = window;\n\nconst c = el('canvas') as HTMLCanvasElement;\nconst w = 720;\nconst h = 480;\n\nc.width = w * dpr;\nc.height = h * dpr;\nc.style.transform = `scale(${max(w / c.width, h / c.height)})`;\n\nconst ctx = c.getContext('2d') as CanvasRenderingContext2D;\ndraw(ctx, c.width, c.height);\n"]}