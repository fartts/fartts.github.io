{"version":3,"sources":["../lib/core/dom.ts","../lib/core/math.ts","12-wasm-particles/src/screen.ts","12-wasm-particles/pkg/12_wasm_particles.js","12-wasm-particles/src/lib.rs","12-wasm-particles/src/entry.ts"],"names":["init","__exports","wasm","update","t","heap","Array","fill","undefined","push","stack_pointer","addBorrowedObject","obj","Error","draw","ctx","w","h","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getUint8Memory","buffer","memory","Uint8Array","getStringFromWasm","ptr","len","decode","subarray","__wbg_error_4bb6c2a97407129a","arg0","arg1","varg0","slice","__wbindgen_free","console","error","heap_next","length","addHeapObject","idx","__wbg_new_59cb74e423758ede","getObject","passStringToWasm","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeInto","arg","size","__wbindgen_malloc","offset","mem","code","charCodeAt","__wbindgen_realloc","view","written","buf","encode","set","cachegetUint32Memory","getUint32Memory","Uint32Array","__wbg_stack_558ba5917b466edd","ret","retptr","stack","retlen","__widl_f_begin_path_CanvasRenderingContext2D","beginPath","__widl_f_fill_CanvasRenderingContext2D","__widl_f_set_fill_style_CanvasRenderingContext2D","fillStyle","handleError","exnptr","e","__widl_f_arc_CanvasRenderingContext2D","arg2","arg3","arg4","arg5","arc","__widl_f_fill_rect_CanvasRenderingContext2D","fillRect","__widl_f_restore_CanvasRenderingContext2D","restore","__widl_f_save_CanvasRenderingContext2D","save","__widl_f_rotate_CanvasRenderingContext2D","rotate","__widl_f_translate_CanvasRenderingContext2D","translate","__wbg_new_3a746f2619705add","Function","__wbg_call_f54d3a6dadb199ca","call","__wbg_self_ac379e780a0d8b94","self","__wbg_crypto_1e4302b85d4f64a2","crypto","__wbg_getRandomValues_1b4ba144162a5c9e","getRandomValues","getArrayU8FromWasm","__wbg_getRandomValues_1ef11e888e5228e9","varg1","__wbg_require_6461b1e9a0d7c34a","require","__wbg_randomFillSync_1b52c8482374c55b","randomFillSync","__wbindgen_string_new","p","l","__wbindgen_is_undefined","i","__wbindgen_debug_string","len_ptr","debug_str","val","type","description","name","isArray","debug","builtInMatches","exec","toString","className","JSON","stringify","_","message","Object","prototype","__wbindgen_jsval_eq","a","b","__wbindgen_throw","dropObject","__wbindgen_object_drop_ref","module","result","imports","URL","Request","response","fetch","WebAssembly","instantiateStreaming","catch","warn","then","r","arrayBuffer","bytes","instantiate","Instance","instance","exports","__wbindgen_wasm_module"],"mappings":";AAqBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA,QAAA,IAAA,QAAA,SAAA,EArBM,MACL,sBAAuB,EACvB,qBAAsB,EACtB,iBAAkB,GAChB,OAEE,SAAU,EAAG,GACV,OAAA,SAAS,cAAc,GAK1B,SAAU,EAAoB,EAAc,GACzC,OAAA,OAAO,iBAAiB,EAAM,GAGjC,SAAU,EACd,EACA,GAEO,OAAA,OAAO,oBAAoB,EAAM,GACzC,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA;;ACoEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,UAAA,EAAA,QAAA,UAAA,EAAA,QAAA,SAAA,QAAA,GAAA,QAAA,KAAA,QAAA,IAAA,QAAA,MAAA,QAAA,IAAA,QAAA,EAAA,QAAA,IAAA,QAAA,IAAA,QAAA,MAAA,QAAA,MAAA,QAAA,IAAA,QAAA,KAAA,QAAA,MAAA,QAAA,KAAA,QAAA,SAAA,EAzFM,MAAM,IACX,EADW,KAEX,EAFW,MAGX,EAHW,KAIX,EAJW,IAKX,EALW,MAMX,EANW,MAOX,EAPW,IAQX,EARW,IASX,EACA,GAAI,EAVO,IAWX,EAXW,MAYX,EAZW,IAaX,EAbW,KAcX,GACE,KA0EH,QAAA,KAAA,EAAA,QAAA,IAAA,EAAA,QAAA,MAAA,EAAA,QAAA,IAAA,EAAA,QAAA,EAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,MAAA,EAAA,QAAA,MAAA,EAAA,QAAA,IAAA,EAAA,QAAA,KAAA,EAAA,QAAA,MAAA,EAAA,QAAA,KAAA,EAAA,QAAA,IAAA,EAzEM,MAAM,EAAS,EAAJ,EAyEjB,QAAA,GAAA,EAxEM,MAAM,SAAE,GAAa,OAetB,SAAU,EAAK,EAAY,EAAY,GAMpC,OAAC,EAAI,GAAK,EAAK,EAAI,EAatB,SAAU,EAAI,GACV,OAAA,EAAU,EAAM,EAAI,EAaxB,SAAU,EAAI,GACX,OAAA,EAAI,EAAI,EAAI,EAAI,IAUnB,SAAU,EAAU,GAChB,OAAU,IAAV,EAAiB,EAUrB,SAAU,EAAU,GAChB,OAAA,EAAU,EAAK,IACxB,QAAA,SAAA;;ACmDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,EA5ID,IAAA,EAAA,QAAA,yBACA,EAAA,QAAA,0BAyBA,SAAS,EACP,EACA,EACA,EACA,GAAsB,GAEtB,EAAO,iBAAiB,EAAM,EAAU,GAG1C,SAAS,EAAK,EAAK,EAAG,EAAO,GACvB,OAAA,EAAO,GAAO,EAET,EAGF,GAAQ,EAAM,EAAO,GAG9B,SAAS,EACP,EACA,EACA,EACA,EACA,GAEQ,OAAA,GACD,IAAA,QACI,OAAA,EAAI,EAAA,KAAA,EAAiB,EAAa,EAAkB,GACxD,IAAA,UACI,OAAA,EAAI,EAAA,KAAA,EAAiB,EAAa,EAAkB,IAIjE,MAAM,EAAsC,CAC1C,kBAAmB,OACnB,eAAgB,SAChB,YAAa,KACb,WAAY,EACZ,aAAc,SAGV,SAAU,EAAO,GACf,MAAA,kBACJ,EADI,eAEJ,EAFI,YAGJ,EAHI,WAIJ,EAJI,aAKJ,GACD,OAAA,OAAA,GAAQ,EAAyB,GAE5B,GAAY,EAAG,EAAA,IAAA,GACf,GAAS,EAAG,EAAA,IAAA,GACZ,EAAU,EAAO,WAAW,GAE5B,EAAgB,CACpB,IAAK,OAAO,iBACZ,eAAgB,EAAU,YAC1B,gBAAiB,EAAU,aAC3B,YAAa,EAAO,MACpB,aAAc,EAAO,OACrB,YAAa,EACb,QAAA,GA0BK,OAvBP,EAAG,OAAQ,SAAU,KACnB,EAAM,eAAiB,EAAU,YACjC,EAAM,gBAAkB,EAAU,aAE5B,MAAA,EAAc,EAAK,EAAY,EAAM,gBACrC,EAAe,EAAK,EAAY,EAAM,iBAE5C,EAAM,YAAe,EAAc,EAAM,IAAO,EAChD,EAAM,aAAgB,EAAe,EAAM,IAAO,EAClD,EAAM,YAAc,EAClB,EACA,EAAM,eACN,EAAM,gBACN,EAAM,YACN,EAAM,cAGR,EAAO,MAAQ,EAAM,YACrB,EAAO,OAAS,EAAM,aACtB,EAAO,MAAM,mBAAqB,EAAM,iBAE1C,OAAO,cAAc,IAAI,MAAM,WAExB,CACD,UACK,OAAA,EAAM,KAGX,qBACK,OAAA,EAAM,gBAGX,sBACK,OAAA,EAAM,iBAGX,kBACK,OAAA,EAAM,aAGX,mBACK,OAAA,EAAM,cAGX,kBACK,OAAA,EAAM,aAGf,QAAA;;;;ACoRWA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,OAAAA,EAAAA,QAAAA,KAAAA,EAAAA,QAAAA,aAAAA,EA7Zf,MAAMC,EAAY,GAClB,IAAIC,EAMG,SAASC,EAAOC,GACZF,OAAAA,EAAKC,OAAOC,GAEvBH,EAAUE,OAASA,EAEnB,MAAME,EAAO,IAAIC,MAAM,IAEvBD,EAAKE,UAAKC,GAEVH,EAAKI,UAAKD,EAAW,MAAM,GAAM,GAEjC,IAAIE,EAAgB,GAEpB,SAASC,EAAkBC,GACnBF,GAAiB,GAAjBA,EAAoB,MAAM,IAAIG,MAAM,mBAEjCH,OADPL,IAAOK,GAAiBE,EACjBF,EAQJ,SAASI,EAAKC,EAAKC,EAAGC,GACrB,IACOf,OAAAA,EAAKY,KAAKH,EAAkBI,GAAMC,EAAGC,GAEtC,QACNZ,EAAKK,UAAmBF,GAKhCP,EAAUa,KAAOA,EAEjB,IAAII,EAAoB,IAAIC,YAAY,SAEpCC,EAAsB,KAC1B,SAASC,IAIED,OAHqB,OAAxBA,GAAgCA,EAAoBE,SAAWpB,EAAKqB,OAAOD,SAC3EF,EAAsB,IAAII,WAAWtB,EAAKqB,OAAOD,SAE9CF,EAGX,SAASK,EAAkBC,EAAKC,GACrBT,OAAAA,EAAkBU,OAAOP,IAAiBQ,SAASH,EAAKA,EAAMC,IAGzE,SAASG,EAA6BC,EAAMC,GACpCC,IAAAA,EAAQR,EAAkBM,EAAMC,GAEpCC,EAAQA,EAAMC,QACdhC,EAAKiC,gBAAgBJ,EAAa,EAAPC,GAE3BI,QAAQC,MAAMJ,GAElBhC,EAAU6B,6BAA+BA,EAEzC,IAAIQ,EAAYjC,EAAKkC,OAErB,SAASC,EAAc5B,GACf0B,IAAcjC,EAAKkC,QAAQlC,EAAKI,KAAKJ,EAAKkC,OAAS,GACjDE,MAAAA,EAAMH,EAILG,OAHPH,EAAYjC,EAAKoC,GAEjBpC,EAAKoC,GAAO7B,EACL6B,EAGX,SAASC,IACEF,OAAAA,EAAc,IAAI3B,OAI7B,SAAS8B,EAAUF,GAAcpC,OAAAA,EAAKoC,GAFtCxC,EAAUyC,2BAA6BA,EAIvC,IAIIE,EAJAC,EAAkB,EAElBC,EAAoB,IAAIC,YAAY,SAIpCH,EADwC,mBAAjCE,EAAkBE,WACN,SAASC,GAGpBC,IAAAA,EAAOD,EAAIV,OACXb,EAAMxB,EAAKiD,kBAAkBD,GAC7BE,EAAS,EACb,CACUC,MAAAA,EAAMhC,IACL+B,KAAAA,EAASH,EAAIV,OAAQa,IAAU,CAC5BE,MAAAA,EAAOL,EAAIM,WAAWH,GACxBE,GAAAA,EAAO,IAAM,MACjBD,EAAI3B,EAAM0B,GAAUE,GAIxBF,GAAAA,IAAWH,EAAIV,OAAQ,CACvBU,EAAMA,EAAIf,MAAMkB,GAChB1B,EAAMxB,EAAKsD,mBAAmB9B,EAAKwB,EAAMA,EAAOE,EAAsB,EAAbH,EAAIV,QACvDkB,MAAAA,EAAOpC,IAAiBQ,SAASH,EAAM0B,EAAQ1B,EAAMwB,GAG3DE,GAFYN,EAAkBE,WAAWC,EAAKQ,GAEhCC,QAGXhC,OADPmB,EAAkBO,EACX1B,GAGQ,SAASuB,GAGpBC,IAAAA,EAAOD,EAAIV,OACXb,EAAMxB,EAAKiD,kBAAkBD,GAC7BE,EAAS,EACb,CACUC,MAAAA,EAAMhC,IACL+B,KAAAA,EAASH,EAAIV,OAAQa,IAAU,CAC5BE,MAAAA,EAAOL,EAAIM,WAAWH,GACxBE,GAAAA,EAAO,IAAM,MACjBD,EAAI3B,EAAM0B,GAAUE,GAIxBF,GAAAA,IAAWH,EAAIV,OAAQ,CACjBoB,MAAAA,EAAMb,EAAkBc,OAAOX,EAAIf,MAAMkB,IAC/C1B,EAAMxB,EAAKsD,mBAAmB9B,EAAKwB,EAAMA,EAAOE,EAASO,EAAIpB,QAC7DlB,IAAiBwC,IAAIF,EAAKjC,EAAM0B,GAChCA,GAAUO,EAAIpB,OAGXb,OADPmB,EAAkBO,EACX1B,GAIf,IAAIoC,EAAuB,KAC3B,SAASC,IAIED,OAHsB,OAAzBA,GAAiCA,EAAqBxC,SAAWpB,EAAKqB,OAAOD,SAC7EwC,EAAuB,IAAIE,YAAY9D,EAAKqB,OAAOD,SAEhDwC,EAGX,SAASG,EAA6BC,EAAKnC,GAEjCoC,MAAAA,EAASvB,EAAiBD,EAAUZ,GAAMqC,OAC1CC,EAASxB,EACTQ,EAAMU,IACZV,EAAIa,EAAM,GAAKC,EACfd,EAAIa,EAAM,EAAI,GAAKG,EAKvB,SAASC,EAA6CvC,GAClDY,EAAUZ,GAAMwC,YAIpB,SAASC,EAAuCzC,GAC5CY,EAAUZ,GAAMxB,OAIpB,SAASkE,EAAiD1C,EAAMC,GAC5DW,EAAUZ,GAAM2C,UAAY/B,EAAUX,GAI1C,SAAS2C,EAAYC,EAAQC,GACnBpB,MAAAA,EAAOM,IACbN,EAAKmB,EAAS,GAAK,EACnBnB,EAAKmB,EAAS,EAAI,GAAKpC,EAAcqC,GAGzC,SAASC,EAAsC/C,EAAMC,EAAM+C,EAAMC,EAAMC,EAAMC,EAAMN,GAC3E,IACAjC,EAAUZ,GAAMoD,IAAInD,EAAM+C,EAAMC,EAAMC,EAAMC,GAC9C,MAAOL,GACLF,EAAYC,EAAQC,IAK5B,SAASO,EAA4CrD,EAAMC,EAAM+C,EAAMC,EAAMC,GACzEtC,EAAUZ,GAAMsD,SAASrD,EAAM+C,EAAMC,EAAMC,GAI/C,SAASK,EAA0CvD,GAC/CY,EAAUZ,GAAMwD,UAIpB,SAASC,EAAuCzD,GAC5CY,EAAUZ,GAAM0D,OAIpB,SAASC,EAAyC3D,EAAMC,EAAM4C,GACtD,IACAjC,EAAUZ,GAAM4D,OAAO3D,GACzB,MAAO6C,GACLF,EAAYC,EAAQC,IAK5B,SAASe,EAA4C7D,EAAMC,EAAM+C,EAAMH,GAC/D,IACAjC,EAAUZ,GAAM8D,UAAU7D,EAAM+C,GAClC,MAAOF,GACLF,EAAYC,EAAQC,IAK5B,SAASiB,EAA2B/D,EAAMC,GAClCC,IAAAA,EAAQR,EAAkBM,EAAMC,GAC7BQ,OAAAA,EAAc,IAAIuD,SAAS9D,IAItC,SAAS+D,EAA4BjE,EAAMC,GAChCQ,OAAAA,EAAcG,EAAUZ,GAAMkE,KAAKtD,EAAUX,KAIxD,SAASkE,EAA4BnE,GAC1BS,OAAAA,EAAcG,EAAUZ,GAAMoE,MAIzC,SAASC,EAA8BrE,GAC5BS,OAAAA,EAAcG,EAAUZ,GAAMsE,QAIzC,SAASC,EAAuCvE,GACrCS,OAAAA,EAAcG,EAAUZ,GAAMwE,iBAIzC,SAASC,EAAmB9E,EAAKC,GACtBN,OAAAA,IAAiBQ,SAASH,EAAM,EAAGA,EAAM,EAAIC,GAGxD,SAAS8E,EAAuC1E,EAAMC,EAAM+C,GACpD2B,IAAAA,EAAQF,EAAmBxE,EAAM+C,GACrCpC,EAAUZ,GAAMwE,gBAAgBG,GAIpC,SAASC,EAA+B5E,EAAMC,GACtCC,IAAAA,EAAQR,EAAkBM,EAAMC,GAC7BQ,OAAAA,EAAcoE,QAAQ3E,IAIjC,SAAS4E,EAAsC9E,EAAMC,EAAM+C,GACnD2B,IAAAA,EAAQF,EAAmBxE,EAAM+C,GACrCpC,EAAUZ,GAAM+E,eAAeJ,GAInC,SAASK,EAAsBC,EAAGC,GAAYzE,OAAAA,EAAcf,EAAkBuF,EAAGC,IAGjF,SAASC,EAAwBC,GAAYxE,YAAiBnC,IAAjBmC,EAAUwE,GAAmB,EAAI,EAG9E,SAASC,EAAwBD,EAAGE,GAC1BC,MAAAA,EACNC,IAEUC,MAAAA,SAAcD,EAChBC,GAAQ,UAARA,GAA4B,WAARA,GAA4B,MAAPD,EAChC,SAAEA,IAEXC,GAAQ,UAARA,EACQ,UAAGD,KAEXC,GAAQ,UAARA,EAAkB,CACZC,MAAAA,EAAcF,EAAIE,YACpBA,OAAe,MAAfA,EACO,mBAEUA,KAGrBD,GAAQ,YAARA,EAAoB,CACdE,MAAAA,EAAOH,EAAIG,KACb,MAAe,iBAARA,GAAoBA,EAAKnF,OAAS,cACtBmF,KAEZ,WAIXpH,GAAAA,MAAMqH,QAAQJ,GAAM,CACdhF,MAAAA,EAASgF,EAAIhF,OACfqF,IAAAA,EAAQ,IACRrF,EAAS,IACTqF,GAASN,EAAUC,EAAI,KAEvB,IAAA,IAAIJ,EAAI,EAAGA,EAAI5E,EAAQ4E,IACvBS,GAAS,KAAON,EAAUC,EAAIJ,IAG3BS,OADPA,GAAS,IAIPC,MAAAA,EAAiB,sBAAsBC,KAAKC,EAAS9B,KAAKsB,IAC5DS,IAAAA,EACAH,KAAAA,EAAetF,OAAS,GAIjBwF,OAAAA,EAAS9B,KAAKsB,GAErBS,GAAa,WALbA,EAAYH,EAAe,IASvB,IACO,MAAA,UAAYI,KAAKC,UAAUX,GAAO,IAC3C,MAAOY,GACE,MAAA,SAIXZ,OAAAA,aAAe1G,SACT0G,EAAIG,SAASH,EAAIa,oBACzBb,EAAInD,QAGH4D,GAGLD,EAAWM,OAAOC,UAAUP,SAC5BR,EAAM5E,EAAUwE,GAChBS,EAAQN,EAAUC,GAClB7F,EAAMkB,EAAiBgF,GAEtBlG,OADPqC,IAAkBsD,EAAU,GAAKxE,EAC1BnB,EAIP,SAAS6G,EAAoBC,EAAGC,GAAY9F,OAAAA,EAAU6F,KAAO7F,EAAU8F,GAAK,EAAI,EAGhF,SAASC,EAAiBhH,EAAKC,GACrB,MAAA,IAAId,MAAMY,EAAkBC,EAAKC,IAI3C,SAASgH,EAAWlG,GACZA,EAAM,KACVpC,EAAKoC,GAAOH,EACZA,EAAYG,GAGhB,SAASmG,EAA2BzB,GAAKwB,EAAWxB,GAGpD,SAASnH,EAAK6I,GACNC,IAAAA,EACEC,MAAAA,EAAU,CAAyB9I,sBAAAA,GAErC4I,GAAAA,aAAkBG,KAAyB,iBAAXH,GAAuBA,aAAkBI,QAAS,CAE5EC,MAAAA,EAAWC,MAAMN,GAEnBC,EAD4C,mBAArCM,YAAYC,qBACVD,YAAYC,qBAAqBH,EAAUH,GACnDO,MAAMzE,IACHzC,QAAQmH,KAAK,sNAAuN1E,GAC7NqE,EACNM,KAAKC,GAAKA,EAAEC,eACZF,KAAKG,GAASP,YAAYQ,YAAYD,EAAOZ,MAGzCG,EACRM,KAAKC,GAAKA,EAAEC,eACZF,KAAKG,GAASP,YAAYQ,YAAYD,EAAOZ,SAIlDD,EAASM,YAAYQ,YAAYf,EAAQE,GACxCS,KAAKV,GACEA,aAAkBM,YAAYS,SACvB,CAAEC,SAAUhB,EAAQD,OAAAA,GAEpBC,GAIZA,OAAAA,EAAOU,KAAK,EAAEM,SAAAA,EAAUjB,OAAAA,MAC3B3I,EAAO4J,EAASC,QAChB/J,EAAKgK,uBAAyBnB,EAEvB,CAAE1I,OAAAA,EAAQW,KAAAA,KAxPzBb,EAAUgE,6BAA+BA,EAKzChE,EAAUqE,6CAA+CA,EAKzDrE,EAAUuE,uCAAyCA,EAKnDvE,EAAUwE,iDAAmDA,EAe7DxE,EAAU6E,sCAAwCA,EAKlD7E,EAAUmF,4CAA8CA,EAKxDnF,EAAUqF,0CAA4CA,EAKtDrF,EAAUuF,uCAAyCA,EASnDvF,EAAUyF,yCAA2CA,EASrDzF,EAAU2F,4CAA8CA,EAMxD3F,EAAU6F,2BAA6BA,EAKvC7F,EAAU+F,4BAA8BA,EAKxC/F,EAAUiG,4BAA8BA,EAKxCjG,EAAUmG,8BAAgCA,EAK1CnG,EAAUqG,uCAAyCA,EAUnDrG,EAAUwG,uCAAyCA,EAMnDxG,EAAU0G,+BAAiCA,EAM3C1G,EAAU4G,sCAAwCA,EAGlD5G,EAAU8G,sBAAwBA,EAGlC9G,EAAUiH,wBAA0BA,EA6EpCjH,EAAUmH,wBAA0BA,EAGpCnH,EAAUsI,oBAAsBA,EAKhCtI,EAAUyI,iBAAmBA,EAS7BzI,EAAU2I,2BAA6BA,EAyCxB5I,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AC7Zf,aADA,IAAA,EAAA,EAAA,QAAA,gCACA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA6I,OAAOkB,SAAU,EAAKnD,EAAAA,SAAAA,QAAQ;;;;;;ACuC9B,aAxCA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,YAEA,QAAA,eACA,IAAA,EAAA,QAAA,yBACA,EAAA,QAAA,0BAEA,MAAM,GAAI,EAAV,EAAA,UAEM,EAAW,IAAO,GAExB,IAAI,GAAW,EAEX,EAAY,EACZ,EAAe,EAEf,EAAW,EAEX,EAAc,EACd,EAAY,EAEhB,SAAS,EAAM,GAWN,IAVP,GAAU,EAAI,EAAA,KAAA,GAGd,GADA,EAAc,EAAI,GACQ,EAE1B,EAAe,EACf,GAAY,EAEZ,GAAW,EAAI,EAAA,KAAA,EAAU,KAElB,GAAY,IACV,EAAA,EAAA,QAAA,GACP,GAAY,GAGT,EAAA,EAAA,MAAA,EAAE,QAAS,EAAE,YAAa,EAAE,eAGnC,EAAK,EAAA,KAAA,KACc,IAAb,IAIJ,GAAU,EAAI,EAAA,KAAA,GAEd,EAAY,EACZ,EAAe","file":"entry.19b70347.js","sourceRoot":"../src/lab","sourcesContent":["export const {\n  requestAnimationFrame: rAF,\n  cancelAnimationFrame: cAF,\n  devicePixelRatio: dpr,\n} = window;\n\nexport function el(selectors: string): Element | null {\n  return document.querySelector(selectors);\n}\n\ntype Listener<T extends Event> = (event: T) => void;\n\nexport function on<T extends Event>(type: string, listener: Listener<T>): void {\n  return window.addEventListener(type, listener as EventListener);\n}\n\nexport function off<T extends Event>(\n  type: string,\n  listener: Listener<T>,\n): void {\n  return window.removeEventListener(type, listener as EventListener);\n}\n","export const {\n  abs,\n  acos,\n  atan2,\n  ceil,\n  cos,\n  floor,\n  hypot,\n  max,\n  min,\n  PI: π,\n  pow,\n  round,\n  sin,\n  sqrt,\n} = Math;\nexport const ππ = π * 2;\nexport const { isFinite } = Number;\n\n/**\n * ## lerp\n * short for \"linear interpolate\" this function returns a number that is\n * interpolated between `a` and `b` by the ratio provided in `i` (e.g. if `i` is\n * 0 `a` is returned, if `i` is 1 `b` is returned)\n *\n * @export\n * @param {number} v0 the lower bound of the interpolation\n * @param {number} v1 the upper bound of the interpolation\n * @param {number} t the ratio by which to interpolate between `a` and `b`\n * @returns {number} a number that is interpolated between `a` and `b` by the\n * ratio provided in `i`\n */\nexport function lerp(v0: number, v1: number, t: number): number {\n  /**\n   * prefer precise method\n   * @see: https://github.com/mattdesl/lerp/blob/master/index.js\n   * @see: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\n   */\n  return (1 - t) * v0 + t * v1;\n}\n\n/**\n * ## saw\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"sawtooth\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function saw(radians: number): number {\n  return (radians % ππ) / π - 1;\n}\n\n/**\n * ## tri\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"triangle wave\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function tri(radians: number): number {\n  return 1 - 2 * abs(saw(radians));\n}\n\n/**\n * ## toDegrees\n * takes an angle in radians and returns that angle in degrees\n *\n * @param {number} radians an angle, in radians\n * @return {number} that same angle, in degrees\n */\nexport function toDegrees(radians: number): number {\n  return (radians * 180) / π;\n}\n\n/**\n * ## toRadians\n * takes an angle in degrees and returns that angle in radians\n *\n * @param {number} degrees an angle, in degrees\n * @return {number} that same angle, in radians\n */\nexport function toRadians(degrees: number): number {\n  return (degrees * π) / 180;\n}\n","import { el } from '../../../lib/core/dom';\nimport { max, min } from '../../../lib/core/math';\n\ntype CanvasSizing = 'cover' | 'contain';\n\nexport interface ScreenOptions {\n  containerSelector: string;\n  canvasSelector: string;\n  contextType: string;\n\n  pixelScale: number;\n  canvasSizing: CanvasSizing;\n}\n\nexport interface Screen {\n  dpr: number;\n  containerWidth: number;\n  containerHeight: number;\n\n  canvasWidth: number;\n  canvasHeight: number;\n  canvasScale: number;\n\n  context: CanvasRenderingContext2D | WebGLRenderingContext | null;\n}\n\nfunction on(\n  target: EventTarget,\n  type: string,\n  listener: EventListener,\n  useCapture: boolean = false,\n) {\n  target.addEventListener(type, listener, useCapture);\n}\n\nfunction step(by = 1, from = 0) {\n  if (from % by === 0) {\n    // \"from\" is already a multiple/step of \"by\", we're done\n    return from;\n  }\n\n  return from + (by - (from % by));\n}\n\nfunction getCanvasScale(\n  sizing: CanvasSizing,\n  containerWidth: number,\n  containerHeight: number,\n  canvasWidth: number,\n  canvasHeight: number,\n): number {\n  switch (sizing) {\n    case 'cover':\n      return max(containerWidth / canvasWidth, containerHeight / canvasHeight);\n    case 'contain':\n      return min(containerWidth / canvasWidth, containerHeight / canvasHeight);\n  }\n}\n\nconst defaultScreenOptions: ScreenOptions = {\n  containerSelector: 'main',\n  canvasSelector: 'canvas',\n  contextType: '2d',\n  pixelScale: 1,\n  canvasSizing: 'cover',\n};\n\nexport function screen(opts?: Partial<ScreenOptions>): Screen {\n  const {\n    containerSelector,\n    canvasSelector,\n    contextType,\n    pixelScale,\n    canvasSizing,\n  } = { ...defaultScreenOptions, ...opts };\n\n  const container = el(containerSelector) as HTMLMainElement;\n  const canvas = el(canvasSelector) as HTMLCanvasElement;\n  const context = canvas.getContext(contextType) as CanvasRenderingContext2D;\n\n  const store: Screen = {\n    dpr: window.devicePixelRatio,\n    containerWidth: container.clientWidth,\n    containerHeight: container.clientHeight,\n    canvasWidth: canvas.width,\n    canvasHeight: canvas.height,\n    canvasScale: 1,\n    context,\n  };\n\n  on(window, 'resize', () => {\n    store.containerWidth = container.clientWidth;\n    store.containerHeight = container.clientHeight;\n\n    const scaledWidth = step(pixelScale, store.containerWidth);\n    const scaledHeight = step(pixelScale, store.containerHeight);\n\n    store.canvasWidth = (scaledWidth * store.dpr) / pixelScale;\n    store.canvasHeight = (scaledHeight * store.dpr) / pixelScale;\n    store.canvasScale = getCanvasScale(\n      canvasSizing,\n      store.containerWidth,\n      store.containerHeight,\n      store.canvasWidth,\n      store.canvasHeight,\n    );\n\n    canvas.width = store.canvasWidth;\n    canvas.height = store.canvasHeight;\n    canvas.style.transform = `scale(${store.canvasScale})`;\n  });\n  window.dispatchEvent(new Event('resize'));\n\n  return {\n    get dpr() {\n      return store.dpr;\n    },\n\n    get containerWidth() {\n      return store.containerWidth;\n    },\n\n    get containerHeight() {\n      return store.containerHeight;\n    },\n\n    get canvasWidth() {\n      return store.canvasWidth;\n    },\n\n    get canvasHeight() {\n      return store.canvasHeight;\n    },\n\n    get canvasScale() {\n      return store.canvasScale;\n    },\n\n    context,\n  };\n}\n","\nconst __exports = {};\nlet wasm;\n\n/**\n* @param {number} t\n* @returns {void}\n*/\nexport function update(t) {\n    return wasm.update(t);\n}\n__exports.update = update\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* @param {any} ctx\n* @param {number} w\n* @param {number} h\n* @returns {void}\n*/\nexport function draw(ctx, w, h) {\n    try {\n        return wasm.draw(addBorrowedObject(ctx), w, h);\n\n    } finally {\n        heap[stack_pointer++] = undefined;\n\n    }\n\n}\n__exports.draw = draw\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction __wbg_error_4bb6c2a97407129a(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n\n    varg0 = varg0.slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n\n    console.error(varg0);\n}\n__exports.__wbg_error_4bb6c2a97407129a = __wbg_error_4bb6c2a97407129a\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction __wbg_new_59cb74e423758ede() {\n    return addHeapObject(new Error());\n}\n__exports.__wbg_new_59cb74e423758ede = __wbg_new_59cb74e423758ede\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            arg = arg.slice(offset);\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + arg.length * 3);\n            const view = getUint8Memory().subarray(ptr + offset, ptr + size);\n            const ret = cachedTextEncoder.encodeInto(arg, view);\n\n            offset += ret.written;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            const buf = cachedTextEncoder.encode(arg.slice(offset));\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + buf.length);\n            getUint8Memory().set(buf, ptr + offset);\n            offset += buf.length;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction __wbg_stack_558ba5917b466edd(ret, arg0) {\n\n    const retptr = passStringToWasm(getObject(arg0).stack);\n    const retlen = WASM_VECTOR_LEN;\n    const mem = getUint32Memory();\n    mem[ret / 4] = retptr;\n    mem[ret / 4 + 1] = retlen;\n\n}\n__exports.__wbg_stack_558ba5917b466edd = __wbg_stack_558ba5917b466edd\n\nfunction __widl_f_begin_path_CanvasRenderingContext2D(arg0) {\n    getObject(arg0).beginPath();\n}\n__exports.__widl_f_begin_path_CanvasRenderingContext2D = __widl_f_begin_path_CanvasRenderingContext2D\n\nfunction __widl_f_fill_CanvasRenderingContext2D(arg0) {\n    getObject(arg0).fill();\n}\n__exports.__widl_f_fill_CanvasRenderingContext2D = __widl_f_fill_CanvasRenderingContext2D\n\nfunction __widl_f_set_fill_style_CanvasRenderingContext2D(arg0, arg1) {\n    getObject(arg0).fillStyle = getObject(arg1);\n}\n__exports.__widl_f_set_fill_style_CanvasRenderingContext2D = __widl_f_set_fill_style_CanvasRenderingContext2D\n\nfunction handleError(exnptr, e) {\n    const view = getUint32Memory();\n    view[exnptr / 4] = 1;\n    view[exnptr / 4 + 1] = addHeapObject(e);\n}\n\nfunction __widl_f_arc_CanvasRenderingContext2D(arg0, arg1, arg2, arg3, arg4, arg5, exnptr) {\n    try {\n        getObject(arg0).arc(arg1, arg2, arg3, arg4, arg5);\n    } catch (e) {\n        handleError(exnptr, e);\n    }\n}\n__exports.__widl_f_arc_CanvasRenderingContext2D = __widl_f_arc_CanvasRenderingContext2D\n\nfunction __widl_f_fill_rect_CanvasRenderingContext2D(arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).fillRect(arg1, arg2, arg3, arg4);\n}\n__exports.__widl_f_fill_rect_CanvasRenderingContext2D = __widl_f_fill_rect_CanvasRenderingContext2D\n\nfunction __widl_f_restore_CanvasRenderingContext2D(arg0) {\n    getObject(arg0).restore();\n}\n__exports.__widl_f_restore_CanvasRenderingContext2D = __widl_f_restore_CanvasRenderingContext2D\n\nfunction __widl_f_save_CanvasRenderingContext2D(arg0) {\n    getObject(arg0).save();\n}\n__exports.__widl_f_save_CanvasRenderingContext2D = __widl_f_save_CanvasRenderingContext2D\n\nfunction __widl_f_rotate_CanvasRenderingContext2D(arg0, arg1, exnptr) {\n    try {\n        getObject(arg0).rotate(arg1);\n    } catch (e) {\n        handleError(exnptr, e);\n    }\n}\n__exports.__widl_f_rotate_CanvasRenderingContext2D = __widl_f_rotate_CanvasRenderingContext2D\n\nfunction __widl_f_translate_CanvasRenderingContext2D(arg0, arg1, arg2, exnptr) {\n    try {\n        getObject(arg0).translate(arg1, arg2);\n    } catch (e) {\n        handleError(exnptr, e);\n    }\n}\n__exports.__widl_f_translate_CanvasRenderingContext2D = __widl_f_translate_CanvasRenderingContext2D\n\nfunction __wbg_new_3a746f2619705add(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    return addHeapObject(new Function(varg0));\n}\n__exports.__wbg_new_3a746f2619705add = __wbg_new_3a746f2619705add\n\nfunction __wbg_call_f54d3a6dadb199ca(arg0, arg1) {\n    return addHeapObject(getObject(arg0).call(getObject(arg1)));\n}\n__exports.__wbg_call_f54d3a6dadb199ca = __wbg_call_f54d3a6dadb199ca\n\nfunction __wbg_self_ac379e780a0d8b94(arg0) {\n    return addHeapObject(getObject(arg0).self);\n}\n__exports.__wbg_self_ac379e780a0d8b94 = __wbg_self_ac379e780a0d8b94\n\nfunction __wbg_crypto_1e4302b85d4f64a2(arg0) {\n    return addHeapObject(getObject(arg0).crypto);\n}\n__exports.__wbg_crypto_1e4302b85d4f64a2 = __wbg_crypto_1e4302b85d4f64a2\n\nfunction __wbg_getRandomValues_1b4ba144162a5c9e(arg0) {\n    return addHeapObject(getObject(arg0).getRandomValues);\n}\n__exports.__wbg_getRandomValues_1b4ba144162a5c9e = __wbg_getRandomValues_1b4ba144162a5c9e\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction __wbg_getRandomValues_1ef11e888e5228e9(arg0, arg1, arg2) {\n    let varg1 = getArrayU8FromWasm(arg1, arg2);\n    getObject(arg0).getRandomValues(varg1);\n}\n__exports.__wbg_getRandomValues_1ef11e888e5228e9 = __wbg_getRandomValues_1ef11e888e5228e9\n\nfunction __wbg_require_6461b1e9a0d7c34a(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    return addHeapObject(require(varg0));\n}\n__exports.__wbg_require_6461b1e9a0d7c34a = __wbg_require_6461b1e9a0d7c34a\n\nfunction __wbg_randomFillSync_1b52c8482374c55b(arg0, arg1, arg2) {\n    let varg1 = getArrayU8FromWasm(arg1, arg2);\n    getObject(arg0).randomFillSync(varg1);\n}\n__exports.__wbg_randomFillSync_1b52c8482374c55b = __wbg_randomFillSync_1b52c8482374c55b\n\nfunction __wbindgen_string_new(p, l) { return addHeapObject(getStringFromWasm(p, l)); }\n__exports.__wbindgen_string_new = __wbindgen_string_new\n\nfunction __wbindgen_is_undefined(i) { return getObject(i) === undefined ? 1 : 0; }\n__exports.__wbindgen_is_undefined = __wbindgen_is_undefined\n\nfunction __wbindgen_debug_string(i, len_ptr) {\n    const debug_str =\n    val => {\n        // primitive types\n        const type = typeof val;\n        if (type == 'number' || type == 'boolean' || val == null) {\n            return  `${val}`;\n        }\n        if (type == 'string') {\n            return `\"${val}\"`;\n        }\n        if (type == 'symbol') {\n            const description = val.description;\n            if (description == null) {\n                return 'Symbol';\n            } else {\n                return `Symbol(${description})`;\n            }\n        }\n        if (type == 'function') {\n            const name = val.name;\n            if (typeof name == 'string' && name.length > 0) {\n                return `Function(${name})`;\n            } else {\n                return 'Function';\n            }\n        }\n        // objects\n        if (Array.isArray(val)) {\n            const length = val.length;\n            let debug = '[';\n            if (length > 0) {\n                debug += debug_str(val[0]);\n            }\n            for(let i = 1; i < length; i++) {\n                debug += ', ' + debug_str(val[i]);\n            }\n            debug += ']';\n            return debug;\n        }\n        // Test for built-in\n        const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n        let className;\n        if (builtInMatches.length > 1) {\n            className = builtInMatches[1];\n        } else {\n            // Failed to match the standard '[object ClassName]'\n            return toString.call(val);\n        }\n        if (className == 'Object') {\n            // we're a user defined class or Object\n            // JSON.stringify avoids problems with cycles, and is generally much\n            // easier than looping through ownProperties of `val`.\n            try {\n                return 'Object(' + JSON.stringify(val) + ')';\n            } catch (_) {\n                return 'Object';\n            }\n        }\n        // errors\n        if (val instanceof Error) {\n        return `${val.name}: ${val.message}\n        ${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n;\nconst toString = Object.prototype.toString;\nconst val = getObject(i);\nconst debug = debug_str(val);\nconst ptr = passStringToWasm(debug);\ngetUint32Memory()[len_ptr / 4] = WASM_VECTOR_LEN;\nreturn ptr;\n}\n__exports.__wbindgen_debug_string = __wbindgen_debug_string\n\nfunction __wbindgen_jsval_eq(a, b) { return getObject(a) === getObject(b) ? 1 : 0; }\n__exports.__wbindgen_jsval_eq = __wbindgen_jsval_eq\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n__exports.__wbindgen_throw = __wbindgen_throw\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction __wbindgen_object_drop_ref(i) { dropObject(i); }\n__exports.__wbindgen_object_drop_ref = __wbindgen_object_drop_ref\n\nfunction init(module) {\n    let result;\n    const imports = { './12_wasm_particles': __exports };\n\n    if (module instanceof URL || typeof module === 'string' || module instanceof Request) {\n\n        const response = fetch(module);\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            result = WebAssembly.instantiateStreaming(response, imports)\n            .catch(e => {\n                console.warn(\"`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                return response\n                .then(r => r.arrayBuffer())\n                .then(bytes => WebAssembly.instantiate(bytes, imports));\n            });\n        } else {\n            result = response\n            .then(r => r.arrayBuffer())\n            .then(bytes => WebAssembly.instantiate(bytes, imports));\n        }\n    } else {\n\n        result = WebAssembly.instantiate(module, imports)\n        .then(result => {\n            if (result instanceof WebAssembly.Instance) {\n                return { instance: result, module };\n            } else {\n                return result;\n            }\n        });\n    }\n    return result.then(({instance, module}) => {\n        wasm = instance.exports;\n        init.__wbindgen_wasm_module = module;\n\n        return { update, draw };\n    });\n}\n\nexport default init;\n\n","import init from '../pkg/12_wasm_particles.js';\nmodule.exports = init(require('../pkg/12_wasm_particles_bg.wasm'));\n","import { screen } from './screen';\nimport { update, draw } from './lib.rs';\n\nimport './style.css';\nimport { rAF } from '../../../lib/core/dom';\nimport { min } from '../../../lib/core/math';\n\nconst s = screen();\n\nconst stepTime = 1000 / 60;\n\nlet frameId = -1;\n\nlet firstTime = 0;\nlet previousTime = 0;\n\nlet overTime = 0;\n\nlet currentTime = 0;\nlet deltaTime = 0;\n\nfunction frame(t: DOMHighResTimeStamp) {\n  frameId = rAF(frame);\n\n  currentTime = t - firstTime;\n  deltaTime = currentTime - previousTime;\n\n  previousTime = currentTime;\n  overTime += deltaTime;\n\n  overTime = min(overTime, 1000);\n\n  while (overTime >= stepTime) {\n    update(currentTime);\n    overTime -= stepTime;\n  }\n\n  draw(s.context, s.canvasWidth, s.canvasHeight);\n}\n\nrAF((t: DOMHighResTimeStamp) => {\n  if (frameId !== -1) {\n    return;\n  }\n\n  frameId = rAF(frame);\n\n  firstTime = t;\n  previousTime = 0;\n});\n"]}