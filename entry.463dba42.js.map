{"version":3,"sources":["13-game-of-life/pkg/wasm-loader.js","13-game-of-life/pkg/game_of_life.js","13-game-of-life/src/lib.rs","../lib/core/dom.ts","../lib/core/math.ts","../lib/game/loop.ts","13-game-of-life/src/entry.ts"],"names":["isFetchable","value","URL","Request","isWasmInstance","WebAssembly","Instance","canInstantiateStreaming","instantiateStreaming","streamErrorMessage","join","instantiate","request","then","response","arrayBuffer","bytes","imports","instantiateRequest","catch","e","console","warn","instantiateModule","module","result","instance","load","wasm","fetch","__wbindgen_wasm_module","exports","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getUint8Memory","buffer","memory","Uint8Array","getStringFromWasm","ptr","len","decode","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","dropObject","takeObject","ret","passStringToWasm","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeInto","arg","size","__wbindgen_malloc","offset","mem","code","charCodeAt","slice","__wbindgen_realloc","view","written","buf","encode","set","cachegetUint32Memory","getUint32Memory","Uint32Array","handleError","__wbindgen_exn_store","isLikeNone","x","debugString","val","type","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","Error","message","stack","Sim","__wrap","Object","create","prototype","free","__wbg_sim_free","new","sim_new","resize","sim_resize","update","_current_time","_delta_time","sim_update","render","_frame_ratio","sim_render","draw","client_x","client_y","sim_draw","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","retptr","retlen","__wbg_error_4bb6c2a97407129a","varg0","__wbindgen_free","error","__widl_instanceof_Window","Window","__widl_f_set_property_CSSStyleDeclaration","arg2","arg3","arg4","varg1","varg3","setProperty","__widl_instanceof_CanvasRenderingContext2D","CanvasRenderingContext2D","__widl_f_set_fill_style_CanvasRenderingContext2D","fillStyle","__widl_f_fill_rect_CanvasRenderingContext2D","fillRect","__widl_f_x_DOMRect","__widl_f_y_DOMRect","y","__widl_f_query_selector_Document","querySelector","__widl_f_get_bounding_client_rect_Element","getBoundingClientRect","__widl_f_client_width_Element","clientWidth","__widl_f_client_height_Element","clientHeight","__widl_instanceof_HTMLCanvasElement","HTMLCanvasElement","__widl_f_get_context_HTMLCanvasElement","getContext","__widl_f_width_HTMLCanvasElement","width","__widl_f_set_width_HTMLCanvasElement","__widl_f_height_HTMLCanvasElement","height","__widl_f_set_height_HTMLCanvasElement","__widl_instanceof_HTMLElement","HTMLElement","__widl_f_style_HTMLElement","style","__widl_f_document_Window","document","__widl_f_device_pixel_ratio_Window","devicePixelRatio","__wbg_newnoargs_8d1797b163dbc9fb","Function","__wbg_call_836fa928f74337e5","__wbindgen_object_clone_ref","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","init","wasmUrl","wasmExports","require"],"mappings":"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","file":"entry.463dba42.js","sourceRoot":"../src/lab","sourcesContent":["function isFetchable(value) {\n  return (\n    value instanceof URL ||\n    typeof value === 'string' ||\n    value instanceof Request\n  );\n}\n\nfunction isWasmInstance(value) {\n  return value instanceof WebAssembly.Instance;\n}\n\nconst canInstantiateStreaming =\n  typeof WebAssembly.instantiateStreaming === 'function';\n\nconst streamErrorMessage = [\n  '`WebAssembly.instantiateStreaming` failed. Assuming this is because your',\n  'server does not serve wasm with `application/wasm` MIME type. Falling back',\n  'to `WebAssembly.instantiate` which is slower. Original error:\\n',\n].join(' ');\n\nfunction instantiate(request) {\n  return request\n    .then(response => response.arrayBuffer())\n    .then(bytes => WebAssembly.instantiate(bytes, imports));\n}\n\nfunction instantiateRequest(request, imports) {\n  return canInstantiateStreaming\n    ? WebAssembly.instantiateStreaming(request, imports).catch(e => {\n        console.warn(streamErrorMessage, e);\n        return instantiate(request);\n      })\n    : instantiate(request);\n}\n\nasync function instantiateModule(module, imports) {\n  const result = await WebAssembly.instantiate(module, imports);\n  return isWasmInstance(result) ? { instance: result, module } : result;\n}\n\nexport async function load(wasm, imports) {\n  const { instance, module } = await (isFetchable(wasm)\n    ? instantiateRequest(fetch(wasm), imports)\n    : instantiateModule(wasm, imports));\n\n  load.__wbindgen_wasm_module = module;\n  return instance.exports;\n}\n","import { load } from './wasm-loader.js';\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            arg = arg.slice(offset);\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + arg.length * 3);\n            const view = getUint8Memory().subarray(ptr + offset, ptr + size);\n            const ret = cachedTextEncoder.encodeInto(arg, view);\n\n            offset += ret.written;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            const buf = cachedTextEncoder.encode(arg.slice(offset));\n            ptr = wasm.__wbindgen_realloc(ptr, size, size = offset + buf.length);\n            getUint8Memory().set(buf, ptr + offset);\n            offset += buf.length;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction handleError(e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n/**\n*/\nexport class Sim {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Sim.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_sim_free(ptr);\n    }\n    /**\n    * @returns {Sim}\n    */\n    static new() {\n        return Sim.__wrap(wasm.sim_new());\n    }\n    /**\n    * @returns {void}\n    */\n    resize() {\n        return wasm.sim_resize(this.ptr);\n    }\n    /**\n    * @param {number} _current_time\n    * @param {number} _delta_time\n    * @returns {void}\n    */\n    update(_current_time, _delta_time) {\n        return wasm.sim_update(this.ptr, _current_time, _delta_time);\n    }\n    /**\n    * @param {number} _frame_ratio\n    * @returns {void}\n    */\n    render(_frame_ratio) {\n        return wasm.sim_render(this.ptr, _frame_ratio);\n    }\n    /**\n    * @param {number} client_x\n    * @param {number} client_y\n    * @returns {void}\n    */\n    draw(client_x, client_y) {\n        return wasm.sim_draw(this.ptr, client_x, client_y);\n    }\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    return addHeapObject(varg0);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    return addHeapObject(new Error());\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(ret, arg0) {\n\n    const retptr = passStringToWasm(getObject(arg0).stack);\n    const retlen = WASM_VECTOR_LEN;\n    const mem = getUint32Memory();\n    mem[ret / 4] = retptr;\n    mem[ret / 4 + 1] = retlen;\n\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n\n    varg0 = varg0.slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n\n    console.error(varg0);\n};\n\nexport const __widl_instanceof_Window = function(arg0) {\n    return getObject(arg0) instanceof Window;\n};\n\nexport const __widl_f_set_property_CSSStyleDeclaration = function(arg0, arg1, arg2, arg3, arg4) {\n    let varg1 = getStringFromWasm(arg1, arg2);\n    let varg3 = getStringFromWasm(arg3, arg4);\n    try {\n        getObject(arg0).setProperty(varg1, varg3);\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nexport const __widl_instanceof_CanvasRenderingContext2D = function(arg0) {\n    return getObject(arg0) instanceof CanvasRenderingContext2D;\n};\n\nexport const __widl_f_set_fill_style_CanvasRenderingContext2D = function(arg0, arg1) {\n    getObject(arg0).fillStyle = getObject(arg1);\n};\n\nexport const __widl_f_fill_rect_CanvasRenderingContext2D = function(arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).fillRect(arg1, arg2, arg3, arg4);\n};\n\nexport const __widl_f_x_DOMRect = function(arg0) {\n    return getObject(arg0).x;\n};\n\nexport const __widl_f_y_DOMRect = function(arg0) {\n    return getObject(arg0).y;\n};\n\nexport const __widl_f_query_selector_Document = function(arg0, arg1, arg2) {\n    let varg1 = getStringFromWasm(arg1, arg2);\n    try {\n\n        const val = getObject(arg0).querySelector(varg1);\n        return isLikeNone(val) ? 0 : addHeapObject(val);\n\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nexport const __widl_f_get_bounding_client_rect_Element = function(arg0) {\n    return addHeapObject(getObject(arg0).getBoundingClientRect());\n};\n\nexport const __widl_f_client_width_Element = function(arg0) {\n    return getObject(arg0).clientWidth;\n};\n\nexport const __widl_f_client_height_Element = function(arg0) {\n    return getObject(arg0).clientHeight;\n};\n\nexport const __widl_instanceof_HTMLCanvasElement = function(arg0) {\n    return getObject(arg0) instanceof HTMLCanvasElement;\n};\n\nexport const __widl_f_get_context_HTMLCanvasElement = function(arg0, arg1, arg2) {\n    let varg1 = getStringFromWasm(arg1, arg2);\n    try {\n\n        const val = getObject(arg0).getContext(varg1);\n        return isLikeNone(val) ? 0 : addHeapObject(val);\n\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nexport const __widl_f_width_HTMLCanvasElement = function(arg0) {\n    return getObject(arg0).width;\n};\n\nexport const __widl_f_set_width_HTMLCanvasElement = function(arg0, arg1) {\n    getObject(arg0).width = arg1 >>> 0;\n};\n\nexport const __widl_f_height_HTMLCanvasElement = function(arg0) {\n    return getObject(arg0).height;\n};\n\nexport const __widl_f_set_height_HTMLCanvasElement = function(arg0, arg1) {\n    getObject(arg0).height = arg1 >>> 0;\n};\n\nexport const __widl_instanceof_HTMLElement = function(arg0) {\n    return getObject(arg0) instanceof HTMLElement;\n};\n\nexport const __widl_f_style_HTMLElement = function(arg0) {\n    return addHeapObject(getObject(arg0).style);\n};\n\nexport const __widl_f_document_Window = function(arg0) {\n\n    const val = getObject(arg0).document;\n    return isLikeNone(val) ? 0 : addHeapObject(val);\n\n};\n\nexport const __widl_f_device_pixel_ratio_Window = function(arg0) {\n    return getObject(arg0).devicePixelRatio;\n};\n\nexport const __wbg_newnoargs_8d1797b163dbc9fb = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    return addHeapObject(new Function(varg0));\n};\n\nexport const __wbg_call_836fa928f74337e5 = function(arg0, arg1) {\n    try {\n        return addHeapObject(getObject(arg0).call(getObject(arg1)));\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nexport const __wbindgen_object_clone_ref = function(arg0) {\n    return addHeapObject(getObject(arg0));\n};\n\nexport const __wbindgen_debug_string = function(ret, arg0) {\n\n    const retptr = passStringToWasm(debugString(getObject(arg0)));\n    const retlen = WASM_VECTOR_LEN;\n    const mem = getUint32Memory();\n    mem[ret / 4] = retptr;\n    mem[ret / 4 + 1] = retlen;\n\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    throw new Error(varg0);\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n\nexport default function init(wasmUrl) {\n  return load(wasmUrl, {\n    ['./game_of_life.js']: {\n      __wbindgen_string_new,\n      __wbindgen_object_drop_ref,\n      __wbg_new_59cb74e423758ede,\n      __wbg_stack_558ba5917b466edd,\n      __wbg_error_4bb6c2a97407129a,\n      __widl_instanceof_Window,\n      __widl_f_set_property_CSSStyleDeclaration,\n      __widl_instanceof_CanvasRenderingContext2D,\n      __widl_f_set_fill_style_CanvasRenderingContext2D,\n      __widl_f_fill_rect_CanvasRenderingContext2D,\n      __widl_f_x_DOMRect,\n      __widl_f_y_DOMRect,\n      __widl_f_query_selector_Document,\n      __widl_f_get_bounding_client_rect_Element,\n      __widl_f_client_width_Element,\n      __widl_f_client_height_Element,\n      __widl_instanceof_HTMLCanvasElement,\n      __widl_f_get_context_HTMLCanvasElement,\n      __widl_f_width_HTMLCanvasElement,\n      __widl_f_set_width_HTMLCanvasElement,\n      __widl_f_height_HTMLCanvasElement,\n      __widl_f_set_height_HTMLCanvasElement,\n      __widl_instanceof_HTMLElement,\n      __widl_f_style_HTMLElement,\n      __widl_f_document_Window,\n      __widl_f_device_pixel_ratio_Window,\n      __wbg_newnoargs_8d1797b163dbc9fb,\n      __wbg_call_836fa928f74337e5,\n      __wbindgen_object_clone_ref,\n      __wbindgen_debug_string,\n      __wbindgen_throw,\n      __wbindgen_rethrow\n    }\n  }).then(wasmExports => {\n    wasm = wasmExports;\n    return {\n      Sim\n    }\n  });\n}\n","import init from '../pkg/game_of_life.js';\nmodule.exports = init(require('../pkg/game_of_life_bg.wasm'));\n","export const {\n  requestAnimationFrame: rAF,\n  cancelAnimationFrame: cAF,\n  devicePixelRatio: dpr,\n} = window;\n\nexport function el(selectors: string): Element | null {\n  return document.querySelector(selectors);\n}\n\ntype Listener<T extends Event> = (event: T) => void;\n\nexport function on<T extends Event>(type: string, listener: Listener<T>): void {\n  return window.addEventListener(type, listener as EventListener);\n}\n\nexport function off<T extends Event>(\n  type: string,\n  listener: Listener<T>,\n): void {\n  return window.removeEventListener(type, listener as EventListener);\n}\n","export const {\n  abs,\n  acos,\n  atan2,\n  ceil,\n  cos,\n  floor,\n  hypot,\n  max,\n  min,\n  PI: π,\n  pow,\n  round,\n  sin,\n  sqrt,\n} = Math;\nexport const ππ = π * 2;\nexport const { isFinite } = Number;\n\n/**\n * ## lerp\n * short for \"linear interpolate\" this function returns a number that is\n * interpolated between `a` and `b` by the ratio provided in `i` (e.g. if `i` is\n * 0 `a` is returned, if `i` is 1 `b` is returned)\n *\n * @export\n * @param {number} v0 the lower bound of the interpolation\n * @param {number} v1 the upper bound of the interpolation\n * @param {number} t the ratio by which to interpolate between `a` and `b`\n * @returns {number} a number that is interpolated between `a` and `b` by the\n * ratio provided in `i`\n */\nexport function lerp(v0: number, v1: number, t: number): number {\n  /**\n   * prefer precise method\n   * @see: https://github.com/mattdesl/lerp/blob/master/index.js\n   * @see: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\n   */\n  return (1 - t) * v0 + t * v1;\n}\n\n/**\n * ## saw\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"sawtooth\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function saw(radians: number): number {\n  return (radians % ππ) / π - 1;\n}\n\n/**\n * ## tri\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"triangle wave\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function tri(radians: number): number {\n  return 1 - 2 * abs(saw(radians));\n}\n\n/**\n * ## toDegrees\n * takes an angle in radians and returns that angle in degrees\n *\n * @param {number} radians an angle, in radians\n * @return {number} that same angle, in degrees\n */\nexport function toDegrees(radians: number): number {\n  return (radians * 180) / π;\n}\n\n/**\n * ## toRadians\n * takes an angle in degrees and returns that angle in radians\n *\n * @param {number} degrees an angle, in degrees\n * @return {number} that same angle, in radians\n */\nexport function toRadians(degrees: number): number {\n  return (degrees * π) / 180;\n}\n","import { rAF, cAF } from '../core/dom';\nimport { min } from '../core/math';\n\ntype UpdateFunction = (t: number, dt: number) => void;\ntype RenderFunction = (lag: number) => void;\n\nexport const stepTime = 1000 / 60;\n\nlet frameId = -1;\n\nlet firstTime = 0;\nlet previousTime = 0;\n\nlet overTime = 0;\n\nlet currentTime = 0;\nlet deltaTime = 0;\n\nexport default function loop(\n  update: UpdateFunction,\n  render: RenderFunction,\n): { isRunning: boolean; start: () => void; stop: () => void } {\n  function tick(time: DOMHighResTimeStamp) {\n    frameId = rAF(tick);\n\n    currentTime = time - firstTime;\n    deltaTime = currentTime - previousTime;\n\n    previousTime = currentTime;\n    overTime += deltaTime;\n\n    overTime = min(overTime, 1000);\n\n    while (overTime >= stepTime) {\n      update(currentTime, stepTime);\n      overTime -= stepTime;\n    }\n\n    render(overTime / stepTime);\n  }\n\n  return {\n    get isRunning() {\n      return frameId !== -1;\n    },\n\n    start() {\n      if (frameId !== -1) {\n        return;\n      }\n\n      frameId = rAF((time: DOMHighResTimeStamp) => {\n        frameId = rAF(tick);\n\n        render(1);\n\n        firstTime = time;\n        previousTime = 0;\n        overTime = 0;\n      });\n    },\n\n    stop() {\n      if (frameId === -1) {\n        return;\n      }\n\n      cAF(frameId);\n      frameId = -1;\n    },\n  };\n}\n","import { Sim } from './lib.rs';\nimport { el } from '../../../lib/core/dom';\nimport loop from '../../../lib/game/loop';\nimport './style.css';\n\nconst sim = Sim.new();\nconst main = loop(\n  (t, dt) => {\n    sim.update(t, dt);\n  },\n  lag => {\n    sim.render(lag);\n  },\n);\n\nlet pointerDown = false;\n\nfunction mousePointer(event: MouseEvent) {\n  event.preventDefault();\n  pointerDown = event.buttons !== 0;\n  pointerDown ? main.stop() : main.start();\n  mousePointerMove(event);\n}\n\nfunction touchPointer(event: TouchEvent) {\n  event.preventDefault();\n  pointerDown = event.touches.length !== 0;\n  pointerDown ? main.stop() : main.start();\n  touchPointerMove(event);\n}\n\nfunction mousePointerMove(event: MouseEvent) {\n  event.preventDefault();\n  if (!pointerDown) {\n    return;\n  }\n\n  const { clientX, clientY } = event;\n  sim.draw(clientX, clientY);\n}\n\nfunction touchPointerMove(event: TouchEvent) {\n  event.preventDefault();\n  if (!pointerDown) {\n    return;\n  }\n\n  const touches = Array.from(event.touches);\n\n  // handle multiple touches by averaging them, will sort of draw \"in the\n  // middle\" of all the touches\n  const { clientX, clientY } = touches.reduce(\n    (acc, touch) => ({\n      clientX: acc.clientX + touch.clientX,\n      clientY: acc.clientY + touch.clientY,\n    }),\n    {\n      clientX: 0,\n      clientY: 0,\n    },\n  );\n\n  sim.draw(clientX / touches.length, clientY / touches.length);\n}\n\nfunction on<\n  T extends EventTarget,\n  U extends keyof DocumentEventMap,\n  V = (this: T, event: DocumentEventMap[U]) => any\n>(target: T, forEvent: U, listener: V) {\n  target.addEventListener(forEvent, (listener as unknown) as EventListener);\n}\n\nconst canvas = el('canvas') as HTMLCanvasElement;\n\non(canvas, 'mousedown', mousePointer);\non(canvas, 'mouseup', mousePointer);\non(canvas, 'mouseenter', mousePointer);\non(canvas, 'mouseleave', mousePointer);\non(canvas, 'mousemove', mousePointerMove);\non(canvas, 'touchstart', touchPointer);\non(canvas, 'touchend', touchPointer);\non(canvas, 'touchmove', touchPointerMove);\n\non(window, 'resize', () => {\n  main.stop();\n  sim.resize();\n});\n\nmain.start();\n"]}