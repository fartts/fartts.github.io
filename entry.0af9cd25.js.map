{"version":3,"sources":["../lib/core/math.ts","../lib/vec/2.ts","../lib/vec/3.ts","../lib/vec/4.ts","../lib/vec/keys.ts","../lib/vec/props.ts","../lib/core/util.ts","../lib/vec/util.ts","../lib/vec/index.ts","18-collisions/src/events.ts","../lib/core/dom.ts","18-collisions/src/resize.ts","18-collisions/src/util/env.ts","18-collisions/src/util/math.ts","18-collisions/src/util/particle.ts","18-collisions/src/util/state.ts","18-collisions/src/util/vec2.ts","18-collisions/src/game/create.ts","18-collisions/src/game/render.ts","18-collisions/src/util/loop.ts","18-collisions/src/entry.ts"],"names":[],"mappings":"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","file":"entry.0af9cd25.js","sourceRoot":"../src/lab","sourcesContent":["export const {\n  abs,\n  acos,\n  atan2,\n  ceil,\n  cos,\n  floor,\n  hypot,\n  max,\n  min,\n  PI: π,\n  pow,\n  random,\n  round,\n  sin,\n  sqrt,\n} = Math;\nexport const ππ = π * 2;\nexport const { isFinite } = Number;\n\n/**\n * ## lerp\n * short for \"linear interpolate\" this function returns a number that is\n * interpolated between `a` and `b` by the ratio provided in `i` (e.g. if `i` is\n * 0 `a` is returned, if `i` is 1 `b` is returned)\n *\n * @export\n * @param {number} v0 the lower bound of the interpolation\n * @param {number} v1 the upper bound of the interpolation\n * @param {number} t the ratio by which to interpolate between `a` and `b`\n * @returns {number} a number that is interpolated between `a` and `b` by the\n * ratio provided in `i`\n */\nexport function lerp(v0: number, v1: number, t: number): number {\n  /**\n   * prefer precise method\n   * @see: https://github.com/mattdesl/lerp/blob/master/index.js\n   * @see: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\n   */\n  return (1 - t) * v0 + t * v1;\n}\n\n/**\n * ## saw\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"sawtooth\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function saw(radians: number): number {\n  return (radians % ππ) / π - 1;\n}\n\n/**\n * ## tri\n * this is a trigonometric function (like Math.sin, or Math.cos), it takes an\n * angle in radians and returns a value between -1 and 1, the \"shape\" of the\n * returned values follows a linear \"triangle wave\" pattern\n *\n * @export\n * @param {number} radians a value in radians (clamped between 0 and ππ)\n * @returns {number} a value between -1 and 1 for entry values between 0 and ππ\n */\nexport function tri(radians: number): number {\n  return 1 - 2 * abs(saw(radians));\n}\n\n/**\n * ## toDegrees\n * takes an angle in radians and returns that angle in degrees\n *\n * @param {number} radians an angle, in radians\n * @return {number} that same angle, in degrees\n */\nexport function toDegrees(radians: number): number {\n  return (radians * 180) / π;\n}\n\n/**\n * ## toRadians\n * takes an angle in degrees and returns that angle in radians\n *\n * @param {number} degrees an angle, in degrees\n * @return {number} that same angle, in radians\n */\nexport function toRadians(degrees: number): number {\n  return (degrees * π) / 180;\n}\n","import { Swizzled2 } from './types';\n\ninterface Vec2 extends Float32Array, Swizzled2 {}\nclass Vec2 extends Float32Array {\n  public static dimensions = 2;\n\n  // public static get [Symbol.species]() {\n  //   return Float32Array;\n  // }\n\n  public toString() {\n    return `vec${Vec2.dimensions}(${super.toString()})`;\n  }\n}\n\nexport default Vec2;\n","import { Swizzled3 } from './types';\n\ninterface Vec3 extends Float32Array, Swizzled3 {}\nclass Vec3 extends Float32Array {\n  public static dimensions = 3;\n\n  // public static get [Symbol.species]() {\n  //   return Float32Array;\n  // }\n\n  public toString() {\n    return `vec${Vec3.dimensions}(${super.toString()})`;\n  }\n}\n\nexport default Vec3;\n","import { Swizzled4 } from './types';\n\ninterface Vec4 extends Float32Array, Swizzled4 {}\nclass Vec4 extends Float32Array {\n  public static dimensions = 4;\n\n  // public static get [Symbol.species]() {\n  //   return Float32Array;\n  // }\n\n  public toString() {\n    return `vec${Vec4.dimensions}(${super.toString()})`;\n  }\n}\n\nexport default Vec4;\n","/**\n * ## toKeyIndexPairs\n *\n * @param {[string, number][]} acc\n * @param {string} key\n * @param {number} i\n * @returns {[string, number][]}\n */\nfunction toKeyIndexPairs(\n  acc: [string, number][],\n  key: string,\n  i: number,\n): [string, number][] {\n  return [...acc, [key, i]];\n}\n\n/**\n * ## toKeyIndexMap\n *\n * @export\n * @param {string[][]} baseKeys\n * @returns {Map<string, number>}\n */\nexport function toKeyIndexMap(baseKeys: string[][]) {\n  return new Map(\n    baseKeys.reduce(\n      (acc: [string, number][], keys) => [\n        ...acc,\n        ...keys.reduce(toKeyIndexPairs, []),\n      ],\n      [],\n    ),\n  );\n}\n\n/**\n * ## toSwizzled\n *\n * @param {string[]} keys\n * @param {string} [key='']\n * @param {number} [depth=4]\n * @returns {Iterable<string>}\n */\nfunction* toSwizzled(keys: string[], key = '', depth = 4): Iterable<string> {\n  if (key.length === depth) {\n    return;\n  }\n\n  for (const k of keys) {\n    const nextKey = `${key}${k}`;\n    yield nextKey;\n    yield* toSwizzled(keys, nextKey);\n  }\n}\n\n/**\n * ## toSwizzledSet\n *\n * @export\n * @param {string[][]} baseKeys\n * @returns {Set<string>}\n */\nexport function toSwizzledSet(baseKeys: string[][]) {\n  return new Set(\n    baseKeys.reduce(\n      (acc: string[], keys) => [...acc, ...Array.from(toSwizzled(keys))],\n      [],\n    ),\n  );\n}\n","import Vec2 from './2';\nimport Vec3 from './3';\nimport Vec4 from './4';\n\nimport { isFinite } from '../core/math';\nimport { toSwizzledSet, toKeyIndexMap } from './keys';\n\nconst Vec = [Vec2, Vec3, Vec4];\n\nfunction getByKey<V extends Float32Array>(\n  target: V,\n  key: string,\n  map: Map<string, number>,\n): number {\n  const i = map.get(key) as number;\n  return target[i];\n}\n\nfunction getterFor<V extends Float32Array>(\n  key: string,\n  map: Map<string, number>,\n):\n  | ((this: V) => number)\n  | ((this: V) => Vec2)\n  | ((this: V) => Vec3)\n  | ((this: V) => Vec4) {\n  const { length } = key;\n\n  return length === 1\n    ? function get(this: V) {\n        return getByKey<V>(this, key, map);\n      }\n    : function get(this: V) {\n        const args = key.split('').map((k) => getByKey<V>(this, k, map));\n        return new Vec[length - 2](args);\n      };\n}\n\nfunction setByKey<V extends Float32Array>(\n  target: V,\n  key: string,\n  map: Map<string, number>,\n  value: number,\n): void {\n  if (!isFinite(value)) {\n    throw new Error(\n      `Cannot assign ${typeof value} value \"${value}\" to a component of ${\n        target.constructor.name\n      }`,\n    );\n  }\n\n  const i = map.get(key) as number;\n  target[i] = value;\n}\n\nfunction setterFor<V extends Float32Array>(\n  key: string,\n  map: Map<string, number>,\n):\n  | ((this: V, value: number) => void)\n  | ((this: V, value: ArrayLike<number>) => void) {\n  const { length } = key;\n\n  return length === 1\n    ? function set(this: V, value: number) {\n        setByKey<V>(this, key, map, value);\n      }\n    : function set(this: V, value: ArrayLike<number>) {\n        if (length !== value.length) {\n          throw new Error(\n            [\n              'Dimension mismatch',\n              `Cannot assign ${value.length}-component value: ${value} to ${length}-component key ${key}`,\n            ].join('\\n'),\n          );\n        }\n\n        key.split('').forEach((k, i) => setByKey<V>(this, k, map, value[i]));\n      };\n}\n\nexport function createProps<V extends Float32Array>(baseKeys: string[][]) {\n  const swizzledSet = toSwizzledSet(baseKeys);\n  const keyIndexMap = toKeyIndexMap(baseKeys);\n\n  return Array.from(swizzledSet).reduce((acc: PropertyDescriptorMap, key) => {\n    acc[key] = {\n      configurable: false,\n      enumerable: true,\n      get: getterFor<V>(key, keyIndexMap),\n      set: setterFor<V>(key, keyIndexMap),\n    };\n\n    return acc;\n  }, {});\n}\n","export const { isArray } = Array;\nexport const { isInteger } = Number;\n\nexport const { slice } = [];\n","import { slice } from '../core/util';\n\n/**\n * ## toArray\n *\n * @export\n * @param {number[]} acc\n * @param {(number | number[] | Float32Array)} arg\n * @returns {number[]}\n */\nexport function toArray(\n  acc: number[],\n  arg: number | number[] | Float32Array,\n): number[] {\n  return acc.concat(arg instanceof Float32Array ? slice.call(arg) : arg);\n}\n","import Vec2 from './2';\nimport Vec3 from './3';\nimport Vec4 from './4';\n\nimport { createProps } from './props';\nimport { toArray } from './util';\nimport { isFinite } from '../core/math';\n\nObject.defineProperties(\n  Vec2.prototype,\n  // prettier-ignore\n  createProps<Vec2>([\n    ['r', 'g'],\n    ['s', 't'],\n    ['x', 'y'],\n  ]),\n);\n\nObject.defineProperties(\n  Vec3.prototype,\n  // prettier-ignore\n  createProps<Vec3>([\n    ['r', 'g', 'b'],\n    ['s', 't', 'p'],\n    ['x', 'y', 'z'],\n  ]),\n);\n\nObject.defineProperties(\n  Vec4.prototype,\n  // prettier-ignore\n  createProps<Vec4>([\n    ['r', 'g', 'b', 'a'],\n    ['s', 't', 'p', 'q'],\n    ['x', 'y', 'z', 'w'],\n  ]),\n);\n\ntype AnyVec = Vec2 | Vec3 | Vec4;\ntype AnyVecType = typeof Vec2 | typeof Vec3 | typeof Vec4;\n\ntype Components = (number | number[] | Float32Array)[];\ntype Factory<V extends AnyVec> = (...args: Components) => V;\n\nfunction createFactory<V extends AnyVec>(\n  Vec: AnyVecType,\n  size: number,\n): Factory<V> {\n  return (...args: Components): V => {\n    const flat = args.reduce(toArray, []);\n\n    if (flat.length > 1 && flat.length !== size) {\n      throw new Error(\n        `${\n          flat.length < size ? 'Not enough' : 'Too many'\n        } arguments provided for construction of ${Vec.name.toLowerCase()}`,\n      );\n    }\n\n    if (\n      flat.length === 1 &&\n      !(typeof flat[0] === 'number' && isFinite(flat[0]))\n    ) {\n      throw new Error(\n        `Invalid arguments \"${flat}\" provided to  ${Vec.name.toLowerCase()}`,\n      );\n    }\n\n    const components =\n      flat.length <= 1 ? new Array(size).fill(flat[0] || 0) : flat;\n\n    return new Vec(components) as V;\n  };\n}\n\nexport const [vec2, vec3, vec4] = [\n  createFactory<Vec2>(Vec2, 2),\n  createFactory<Vec3>(Vec3, 3),\n  createFactory<Vec4>(Vec4, 4),\n];\n","type Listener<K extends keyof HTMLElementEventMap> = (\n  event: HTMLElementEventMap[K],\n) => void;\n\nexport function on<T extends EventTarget, U extends keyof HTMLElementEventMap>(\n  target: T,\n  forEvent: U,\n  listener: Listener<U>,\n  options: boolean | AddEventListenerOptions = false,\n) {\n  target.addEventListener(forEvent, listener as EventListener, options);\n}\n\nexport function off<T extends EventTarget, U extends keyof HTMLElementEventMap>(\n  target: T,\n  forEvent: U,\n  listener: Listener<U>,\n  options: boolean | EventListenerOptions = false,\n) {\n  target.removeEventListener(forEvent, listener as EventListener, options);\n}\n","export const {\n  requestAnimationFrame: rAF,\n  cancelAnimationFrame: cAF,\n  devicePixelRatio: dpr,\n} = window;\n\nexport function el<T extends Element>(selectors: string): T {\n  const element = document.querySelector<T>(selectors);\n\n  if (!element) {\n    throw new Error(`Couldn't get \"${selectors}\" element`);\n  }\n\n  return element;\n}\n\ntype Listener<T extends Event> = (event: T) => void;\n\nexport function on<T extends Event>(type: string, listener: Listener<T>): void {\n  return window.addEventListener(type, listener as EventListener);\n}\n\nexport function off<T extends Event>(\n  type: string,\n  listener: Listener<T>,\n): void {\n  return window.removeEventListener(type, listener as EventListener);\n}\n","interface ResizeableElement extends HTMLElement {\n  width: number;\n  height: number;\n}\n\nconst { max } = Math;\nconst { devicePixelRatio: dpr } = window;\n\nfunction nearest(multipleOf = 1, startingAt = 0) {\n  return startingAt % multipleOf !== 0\n    ? startingAt + (multipleOf - (startingAt % multipleOf))\n    : startingAt;\n}\n\nexport function resize(\n  container: HTMLElement,\n  target: ResizeableElement,\n  scale = 1,\n) {\n  const { clientHeight: h, clientWidth: w } = container;\n\n  const width = nearest(scale, w);\n  const height = nearest(scale, h);\n\n  target.width = (width * dpr) / scale;\n  target.height = (height * dpr) / scale;\n\n  target.style.transform = `scale(${max(w / target.width, h / target.height)})`;\n}\n","import { el } from '../../../../lib/core/dom';\n\nimport { on } from '../events';\nimport { resize } from '../resize';\n\ninterface Env {\n  main: HTMLElement;\n  canvas: HTMLCanvasElement;\n  context: CanvasRenderingContext2D;\n  scale: number;\n}\n\nconst main = el<HTMLElement>('main');\nconst canvas = el<HTMLCanvasElement>('canvas');\nconst context = canvas.getContext('2d');\nif (!context) {\n  throw new Error(\"Couldn't get a `CanvasRenderingContext2D`\");\n}\n\nmain.style.width = '800px';\nmain.style.height = '800px';\n\nconst scale = 12;\nlet shouldResize = true;\n\nexport const handleResize = () => {\n  if (!shouldResize) {\n    return;\n  }\n\n  resize(main, canvas, scale);\n  shouldResize = false;\n};\n\non(window, 'resize', () => {\n  shouldResize = true;\n});\n\nexport const env: Env = {\n  main,\n  canvas,\n  context,\n  scale,\n};\n","import { lerp, random } from '../../../../lib/core/math';\n\nexport const rng: (a: number, b: number) => number = (a, b) =>\n  lerp(a, b, random());\n","import { Vec2 } from './vec2';\nimport { vec2 } from '../../../../lib/vec';\n\nexport interface Particle {\n  cpos: Vec2;\n  ppos: Vec2;\n}\n\nexport const particle: (x: number, y: number) => Particle = (x, y) => ({\n  cpos: vec2(x, y),\n  ppos: vec2(x, y),\n});\n","import { vec2 } from '../../../../lib/vec';\n\nimport { env } from '../util/env';\nimport { Particle, particle } from './particle';\nimport { Line, Vec2 } from './vec2';\n\nexport interface State {\n  mouse: Particle;\n  mouseDown: boolean;\n  keys: string[];\n\n  bounds: Line[];\n  intersections: [Line, Line, Vec2][];\n  gravity: Vec2;\n  player: Particle;\n}\n\nexport const state: State = {\n  mouse: particle(0, 0),\n  mouseDown: false,\n  keys: [],\n\n  bounds: [],\n  intersections: [],\n  gravity: vec2(0, 6 / env.scale),\n  player: particle(0, 0),\n};\n","import { hypot } from '../../../../lib/core/math';\n\nexport interface Vec2 {\n  x: number;\n  y: number;\n}\n\nexport type Line = [Vec2, Vec2];\n\nexport const vec2: (x: number, y: number) => Vec2 = (x, y) => ({ x, y });\n\nexport const copy: (v: Vec2) => Vec2 = (v) => vec2(v.x, v.y);\n\nexport const addv: (a: Vec2, b: Vec2) => Vec2 = (a, b) =>\n  vec2(a.x + b.x, a.y + b.y);\n\nexport const subv: (a: Vec2, b: Vec2) => Vec2 = (a, b) =>\n  vec2(a.x - b.x, a.y - b.y);\n\nexport const dotp: (a: Vec2, b: Vec2) => number = (a, b) =>\n  a.x * b.x + a.y * b.y;\n\nexport const crsp: (a: Vec2, b: Vec2) => number = (a, b) =>\n  a.x * b.y - a.y * b.x;\n\nexport const adds: (a: Vec2, s: number) => Vec2 = (a, s) =>\n  vec2(a.x + s, a.y + s);\n\nexport const muls: (a: Vec2, s: number) => Vec2 = (a, s) =>\n  vec2(a.x * s, a.y * s);\n\nexport const size: (v: Vec2) => number = ({ x, y }) => hypot(x, y);\n\nexport const nrml: (v: Vec2) => Vec2 = (v) => muls(v, 1 / size(v));\n\nexport const perp: (v: Vec2) => Vec2 = ({ x, y }) => vec2(y, -x);\n\n/**\n * point of intesection (between two line segments)\n *\n * @returns Vec2\n * @see https://stackoverflow.com/a/24392281/1577876\n * @see https://stackoverflow.com/a/30160064/1577876\n */\nexport const poiv: (a: [Vec2, Vec2], b: [Vec2, Vec2]) => Vec2 = (\n  [a, b],\n  [c, d],\n) => {\n  const ab = subv(b, a);\n  const cd = subv(d, c);\n\n  const det = crsp(ab, cd);\n\n  if (det === 0) {\n    // the two segments are parallel and do not intersect\n    return vec2(NaN, NaN);\n  }\n\n  const t = subv(d, a);\n  const lambda = ((d.y - c.y) * t.x + (c.x - d.x) * t.y) / det;\n  const gamma = ((a.y - b.y) * t.x + (b.x - a.x) * t.y) / det;\n\n  return -0.01 < lambda && lambda < 1.01 && -0.01 < gamma && gamma < 1.01\n    ? addv(a, muls(ab, lambda)) // could also use: `addv(c, muls(cd, gamma))`\n    : vec2(NaN, NaN); // the two segments do not intersect\n};\n","import { env } from '../util/env';\nimport { rng } from '../util/math';\nimport { particle } from '../util/particle';\nimport { state } from '../util/state';\nimport { vec2 } from '../util/vec2';\n\nexport const create: () => void = () => {\n  const { width, height } = env.canvas;\n\n  const top = () => rng(height * 0.1, height * 0.2);\n  const right = () => rng(width * 0.8, width * 0.9);\n  const bottom = () => rng(height * 0.8, height * 0.9);\n  const bottomMiddle = () => rng(height * 0.6, height * 0.8);\n  const left = () => rng(width * 0.1, width * 0.2);\n\n  const lt = vec2(left(), top());\n  const ct = vec2((left() + right()) * 0.5, top());\n  const rt = vec2(right(), top());\n  const rc = vec2(right(), (top() + bottom()) * 0.5);\n  const rb = vec2(right(), bottom());\n  const cb = vec2((left() + right()) * 0.333, bottomMiddle());\n  const lb = vec2(left(), bottom());\n  const lc = vec2(left(), (top() + bottom()) * 0.5);\n\n  state.bounds = [\n    [lt, ct],\n    [ct, rt],\n    [rt, rc],\n    [rc, rb],\n    [rb, cb],\n    [cb, lb],\n    [lb, lc],\n    [lc, lt],\n  ];\n  state.mouse = particle(width * 0.5, height * 0.5);\n  state.player = particle(width * 0.5, height * 0.5);\n};\n","import { hypot, ππ } from '../../../../lib/core/math';\n\nimport { env } from '../util/env';\nimport { state } from '../util/state';\nimport { adds, addv, Line, Vec2 } from '../util/vec2';\n\nconst es = 12 / env.scale;\n\n// radii: large, medium, small\nconst rl = 13 * es;\nconst rm = 8 * es;\nconst rs = 5 * es;\n\n// sizes: cross, plus\nconst sc = 3 * es;\nconst sp = hypot(sc, sc);\n\nconst line: (ctx: CanvasRenderingContext2D, a: Vec2, b: Vec2) => void = (\n  ctx,\n  a,\n  b,\n) => {\n  ctx.beginPath();\n  ctx.moveTo(a.x, a.y);\n  ctx.lineTo(b.x, b.y);\n  ctx.stroke();\n};\n\nconst chain: (ctx: CanvasRenderingContext2D, lines: Line[]) => void = (\n  ctx,\n  lines,\n) => {\n  ctx.beginPath();\n  lines.forEach(([a, b]) => {\n    ctx.moveTo(a.x, a.y);\n    ctx.lineTo(b.x, b.y);\n  });\n  ctx.stroke();\n};\n\nconst cross: (ctx: CanvasRenderingContext2D, v: Vec2, s: number) => void = (\n  ctx,\n  v,\n  s,\n) => {\n  line(ctx, adds(v, -s), adds(v, s));\n  line(ctx, addv(v, { x: -s, y: s }), addv(v, { x: s, y: -s }));\n};\n\nconst plus: (ctx: CanvasRenderingContext2D, v: Vec2, s: number) => void = (\n  ctx,\n  v,\n  s,\n) => {\n  line(ctx, addv(v, { x: 0, y: -s }), addv(v, { x: 0, y: s }));\n  line(ctx, addv(v, { x: -s, y: 0 }), addv(v, { x: s, y: 0 }));\n};\n\nexport const render: (ctx: CanvasRenderingContext2D) => void = (ctx) => {\n  const { width, height } = env.canvas;\n  const { mouse, mouseDown, bounds, intersections, player } = state;\n\n  ctx.clearRect(0, 0, width, height);\n\n  ctx.strokeStyle = ctx.fillStyle = 'black';\n  chain(ctx, bounds);\n\n  ctx.strokeStyle = ctx.fillStyle = 'black';\n  ctx.beginPath();\n  ctx.ellipse(player.cpos.x, player.cpos.y, rl, rl, 0, 0, ππ);\n  mouseDown ? ctx.fill() : ctx.stroke();\n\n  ctx.strokeStyle = ctx.fillStyle = 'cyan';\n  plus(ctx, player.cpos, sp);\n\n  ctx.strokeStyle = ctx.fillStyle = 'blue';\n  ctx.beginPath();\n  ctx.ellipse(mouse.cpos.x, mouse.cpos.y, rm, rm, 0, 0, ππ);\n  mouseDown ? ctx.fill() : ctx.stroke();\n\n  ctx.strokeStyle = ctx.fillStyle = 'red';\n  ctx.beginPath();\n  ctx.ellipse(mouse.ppos.x, mouse.ppos.y, rs, rs, 0, 0, ππ);\n  mouseDown ? ctx.fill() : ctx.stroke();\n\n  ctx.strokeStyle = ctx.fillStyle = 'green';\n  intersections.forEach(([[a, b], [c, d], ipos]) => {\n    cross(ctx, ipos, sc);\n\n    // // debugging\n    // const v = subv(d, c);\n    // const n = nrml(perp(subv(b, a)));\n\n    // ctx.strokeStyle = ctx.fillStyle = 'orange';\n    // line(ctx, ipos, addv(ipos, muls(nrml(perp(subv(a, ipos))), 100)));\n\n    // ctx.strokeStyle = ctx.fillStyle = 'teal';\n    // line(ctx, ipos, addv(ipos, subv(v, muls(n, 2 * dotp(v, n)))));\n  });\n\n  ctx.strokeStyle = ctx.fillStyle = 'magenta';\n  line(ctx, player.ppos, player.cpos);\n};\n","import { rAF, cAF } from '../../../../lib/core/dom';\n\nimport { env, handleResize } from './env';\n\ninterface PlaybackState {\n  isPlaying: () => boolean;\n  start: () => void;\n  stop: () => void;\n}\n\nexport const loop: (\n  create: () => void,\n  update: (t: number, dt: number) => void,\n  render: (ctx: CanvasRenderingContext2D) => void,\n) => PlaybackState = (create, update, render) => {\n  const frameTime = 1_000 / 60;\n\n  let firstTime = 0;\n  let previousTime = 0;\n  let overTime = 0;\n\n  let frameId = 0;\n\n  const tick = (time: DOMHighResTimeStamp) => {\n    frameId = rAF(tick);\n    handleResize();\n\n    const normalTime = time - firstTime;\n    const deltaTime = normalTime - previousTime;\n    overTime += deltaTime;\n\n    while (overTime >= frameTime) {\n      previousTime += frameTime;\n      update(previousTime, frameTime);\n      overTime -= frameTime;\n    }\n\n    render(env.context);\n    previousTime = normalTime;\n  };\n\n  const start: () => void = () => {\n    firstTime = performance.now();\n    frameId = rAF(tick);\n    create();\n  };\n\n  const stop: () => void = () => {\n    firstTime = 0;\n    previousTime = 0;\n    overTime = 0;\n\n    cAF(frameId);\n    frameId = 0;\n  };\n\n  return {\n    isPlaying: () => frameId !== 0,\n    start,\n    stop,\n  };\n};\n","import { max } from '../../../lib/core/math';\nimport { vec2 } from '../../../lib/vec';\n\nimport { on } from './events';\n\nimport { create } from './game/create';\nimport { render } from './game/render';\n\nimport { env, handleResize } from './util/env';\nimport { loop } from './util/loop';\nimport { state } from './util/state';\nimport {\n  addv,\n  copy,\n  poiv,\n  size,\n  subv,\n  Vec2,\n  muls,\n  perp,\n  nrml,\n  dotp,\n} from './util/vec2';\n\nimport './style.css';\n\n/**\n * trying to figure out point-line, and eventually circle-line collision with\n * Verlet integration ... it sorta works, but the point slides through joints\n * and the collision response isn't right\n *\n * @param t - time (ms since loop start)\n * @param dt - delta time (fixed, 60 / 1_000)\n *\n * @see https://ericleong.me/research/circle-line/\n * @see https://www.metanetsoftware.com/technique/tutorialA.html\n */\nconst update: (t: number, dt: number) => void = (t, dt) => {\n  // const { width, height } = env.canvas;\n  const { /* mouse, */ bounds, gravity, player } = state;\n\n  const cvel = addv(subv(player.cpos, player.ppos), gravity);\n  const npos = addv(player.cpos, cvel);\n\n  // const move: [Vec2, Vec2] = [vec2(width * 0.5, height * 0.5), mouse.cpos];\n  const proj: [Vec2, Vec2] = [player.cpos, npos];\n  state.intersections = bounds.reduce<[[Vec2, Vec2], [Vec2, Vec2], Vec2][]>(\n    (acc, line) => {\n      const ipos = poiv(line, proj);\n      if (!(isNaN(ipos.x) || isNaN(ipos.y))) {\n        acc.push([line, proj, ipos]);\n      }\n\n      // const jpos = poiv(line, move);\n      // if (!(isNaN(jpos.x) || isNaN(jpos.y))) {\n      //   acc.push([line, move, jpos]);\n      // }\n\n      return acc;\n    },\n    [],\n  );\n\n  if (state.intersections.length) {\n    // this is: `[bound: Line, proj: Line, poi: Vec2]`\n    const [[a, b], [c, d], i] = state.intersections[0];\n\n    // a.k.a. `cvel`\n    const v = subv(d, c);\n    // normal vector to the collided bound\n    const n = nrml(perp(subv(b, a)));\n\n    // penetration percent (0 - 1)\n    const pens = size(subv(d, i)) / size(v);\n\n    /**\n     * reflected position\n     *\n     * @see https://math.stackexchange.com/a/13263\n     * @see https://math.stackexchange.com/a/3340378\n     * @see https://gamedev.stackexchange.com/a/113394\n     * @see https://gamedev.stackexchange.com/a/23674\n     */\n    const rpos = addv(i, muls(subv(v, muls(n, 2 * dotp(v, n))), 1 - pens));\n\n    // make previous position the point of impact\n    player.ppos = copy(i);\n\n    // the new current position is the reflected position\n    player.cpos = rpos;\n\n    // // for debugging in the renderer\n    // player.cpos = copy(i);\n  } else {\n    player.ppos = copy(player.cpos);\n    player.cpos = copy(npos);\n  }\n\n  // if (state.intersections.length) {\n  //   stop();\n  // }\n};\n\nconst { isPlaying, start, stop } = loop(create, update, render);\n\non(window, 'keyup', (event) => {\n  if (event.key === ' ') {\n    isPlaying() ? stop() : start();\n\n    // tslint:disable-next-line:no-console\n    console.log(isPlaying() ? 'started' : 'stopped');\n  }\n});\n\non(window, 'mousemove', (event) => {\n  const { clientWidth, clientHeight } = env.main;\n  const { width, height } = env.canvas;\n  const scale = max(clientWidth / width, clientHeight / height);\n\n  state.mouse.ppos = copy(state.mouse.cpos);\n  state.mouse.cpos = vec2(\n    (event.clientX - env.main.offsetLeft) / scale,\n    (event.clientY - env.main.offsetTop) / scale,\n  );\n});\n\non(window, 'mousedown', () => {\n  state.mouseDown = true;\n});\n\non(window, 'mouseup', () => {\n  state.mouseDown = false;\n});\n\nhandleResize();\nstart();\n"]}